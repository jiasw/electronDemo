{"version":3,"file":"LoginForm.vue_vue_type_script_setup_true_lang-Bj3Oe-lA.js","sources":["../../src/views/Login/components/LoginForm.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { reactive, ref, watch, onMounted, unref } from 'vue'\nimport { Form, FormSchema } from '@/components/Form'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { ElCheckbox, ElLink } from 'element-plus'\nimport { useForm } from '@/hooks/web/useForm'\nimport { loginApi, getTestRoleApi, getAdminRoleApi } from '@/api/login'\nimport { useAppStore } from '@/store/modules/app'\nimport { usePermissionStore } from '@/store/modules/permission'\nimport { useRouter } from 'vue-router'\nimport type { RouteLocationNormalizedLoaded, RouteRecordRaw } from 'vue-router'\nimport { UserType } from '@/api/login/types'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { Icon } from '@/components/Icon'\nimport { useUserStore } from '@/store/modules/user'\nimport { BaseButton } from '@/components/Button'\n\nconst { required } = useValidator()\n\nconst emit = defineEmits(['to-register'])\n\nconst appStore = useAppStore()\n\nconst userStore = useUserStore()\n\nconst permissionStore = usePermissionStore()\n\nconst { currentRoute, addRoute, push } = useRouter()\n\nconst { t } = useI18n()\n\nconst rules = {\n  username: [required()],\n  password: [required()]\n}\n\nconst schema = reactive<FormSchema[]>([\n  {\n    field: 'title',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return <h2 class=\"text-2xl font-bold text-center w-[100%]\">{t('login.login')}</h2>\n        }\n      }\n    }\n  },\n  {\n    field: 'username',\n    label: t('login.username'),\n    // value: 'admin',\n    component: 'Input',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      placeholder: 'admin or test'\n    }\n  },\n  {\n    field: 'password',\n    label: t('login.password'),\n    // value: 'admin',\n    component: 'InputPassword',\n    colProps: {\n      span: 24\n    },\n    componentProps: {\n      style: {\n        width: '100%'\n      },\n      placeholder: 'admin or test',\n      // 按下enter键触发登录\n      onKeydown: (_e: any) => {\n        if (_e.key === 'Enter') {\n          _e.stopPropagation() // 阻止事件冒泡\n          signIn()\n        }\n      }\n    }\n  },\n  {\n    field: 'tool',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"flex justify-between items-center w-[100%]\">\n                <ElCheckbox v-model={remember.value} label={t('login.remember')} size=\"small\" />\n                <ElLink type=\"primary\" underline={false}>\n                  {t('login.forgetPassword')}\n                </ElLink>\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  },\n  {\n    field: 'login',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"w-[100%]\">\n                <BaseButton\n                  loading={loading.value}\n                  type=\"primary\"\n                  class=\"w-[100%]\"\n                  onClick={signIn}\n                >\n                  {t('login.login')}\n                </BaseButton>\n              </div>\n              <div class=\"w-[100%] mt-15px\">\n                <BaseButton class=\"w-[100%]\" onClick={toRegister}>\n                  {t('login.register')}\n                </BaseButton>\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  },\n  {\n    field: 'other',\n    component: 'Divider',\n    label: t('login.otherLogin'),\n    componentProps: {\n      contentPosition: 'center'\n    }\n  },\n  {\n    field: 'otherIcon',\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"flex justify-between w-[100%]\">\n                <Icon\n                  icon=\"vi-ant-design:github-filled\"\n                  size={iconSize}\n                  class=\"cursor-pointer ant-icon\"\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                />\n                <Icon\n                  icon=\"vi-ant-design:wechat-filled\"\n                  size={iconSize}\n                  class=\"cursor-pointer ant-icon\"\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                />\n                <Icon\n                  icon=\"vi-ant-design:alipay-circle-filled\"\n                  size={iconSize}\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                  class=\"cursor-pointer ant-icon\"\n                />\n                <Icon\n                  icon=\"vi-ant-design:weibo-circle-filled\"\n                  size={iconSize}\n                  color={iconColor}\n                  hoverColor={hoverColor}\n                  class=\"cursor-pointer ant-icon\"\n                />\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst iconSize = 30\n\nconst remember = ref(userStore.getRememberMe)\n\nconst initLoginInfo = () => {\n  const loginInfo = userStore.getLoginInfo\n  if (loginInfo) {\n    const { username, password } = loginInfo\n    setValues({ username, password })\n  }\n}\nonMounted(() => {\n  initLoginInfo()\n})\n\nconst { formRegister, formMethods } = useForm()\nconst { getFormData, getElFormExpose, setValues } = formMethods\n\nconst loading = ref(false)\n\nconst iconColor = '#999'\n\nconst hoverColor = 'var(--el-color-primary)'\n\nconst redirect = ref<string>('')\n\nwatch(\n  () => currentRoute.value,\n  (route: RouteLocationNormalizedLoaded) => {\n    redirect.value = route?.query?.redirect as string\n  },\n  {\n    immediate: true\n  }\n)\n\n// 登录\nconst signIn = async () => {\n  const formRef = await getElFormExpose()\n  await formRef?.validate(async (isValid) => {\n    if (isValid) {\n      loading.value = true\n      const formData = await getFormData<UserType>()\n\n      try {\n        const res = await loginApi(formData)\n\n        if (res) {\n          // 是否记住我\n          if (unref(remember)) {\n            userStore.setLoginInfo({\n              username: formData.username,\n              password: formData.password\n            })\n          } else {\n            userStore.setLoginInfo(undefined)\n          }\n          userStore.setRememberMe(unref(remember))\n          userStore.setUserInfo(res.data)\n          // 是否使用动态路由\n          if (appStore.getDynamicRouter) {\n            getRole()\n          } else {\n            await permissionStore.generateRoutes('static').catch(() => {})\n            permissionStore.getAddRouters.forEach((route) => {\n              addRoute(route as RouteRecordRaw) // 动态添加可访问路由表\n            })\n            permissionStore.setIsAddRouters(true)\n            push({ path: redirect.value || permissionStore.addRouters[0].path })\n          }\n        }\n      } finally {\n        loading.value = false\n      }\n    }\n  })\n}\n\n// 获取角色信息\nconst getRole = async () => {\n  const formData = await getFormData<UserType>()\n  const params = {\n    roleName: formData.username\n  }\n  const res =\n    appStore.getDynamicRouter && appStore.getServerDynamicRouter\n      ? await getAdminRoleApi(params)\n      : await getTestRoleApi(params)\n  if (res) {\n    const routers = res.data || []\n    userStore.setRoleRouters(routers)\n    appStore.getDynamicRouter && appStore.getServerDynamicRouter\n      ? await permissionStore.generateRoutes('server', routers).catch(() => {})\n      : await permissionStore.generateRoutes('frontEnd', routers).catch(() => {})\n\n    permissionStore.getAddRouters.forEach((route) => {\n      addRoute(route as RouteRecordRaw) // 动态添加可访问路由表\n    })\n    permissionStore.setIsAddRouters(true)\n    push({ path: redirect.value || permissionStore.addRouters[0].path })\n  }\n}\n\n// 去注册页面\nconst toRegister = () => {\n  emit('to-register')\n}\n</script>\n\n<template>\n  <Form\n    :schema=\"schema\"\n    :rules=\"rules\"\n    label-position=\"top\"\n    hide-required-asterisk\n    size=\"large\"\n    class=\"dark:border-1 dark:border-[var(--el-border-color)] dark:border-solid\"\n    @register=\"formRegister\"\n  />\n</template>\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","iconSize","iconColor","hoverColor","required","useValidator","emit","__emit","appStore","useAppStore","userStore","useUserStore","permissionStore","usePermissionStore","currentRoute","addRoute","push","useRouter","t","useI18n","rules","username","password","schema","reactive","field","colProps","span","formItemProps","slots","default","_createVNode","label","component","componentProps","placeholder","style","width","onKeydown","_e","key","stopPropagation","signIn","_slot","_Fragment","ElCheckbox","remember","value","$event","ElLink","_slot2","_slot3","BaseButton","loading","toRegister","contentPosition","Icon","ref","getRememberMe","initLoginInfo","loginInfo","getLoginInfo","setValues","onMounted","formRegister","formMethods","useForm","getFormData","getElFormExpose","redirect","watch","route","query","immediate","__async","formRef","validate","isValid","formData","res","loginApi","unref","setLoginInfo","undefined","setRememberMe","setUserInfo","data","getDynamicRouter","getRole","generateRoutes","catch","getAddRouters","forEach","setIsAddRouters","path","addRouters","params","roleName","getServerDynamicRouter","getAdminRoleApi","getTestRoleApi","routers","setRoleRouters"],"mappings":"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"}