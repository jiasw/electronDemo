{"version":3,"file":"useCrudSchemas-B2QyfYFX.js","sources":["../../src/hooks/web/useCrudSchemas.ts"],"sourcesContent":["import { reactive } from 'vue'\nimport { eachTree, treeMap, filter } from '@/utils/tree'\nimport { FormSchema } from '@/components/Form'\nimport { TableColumn } from '@/components/Table'\nimport { DescriptionsSchema } from '@/components/Descriptions'\n\nexport type CrudSchema = Omit<TableColumn, 'children'> & {\n  search?: CrudSearchParams\n  table?: CrudTableParams\n  form?: CrudFormParams\n  detail?: CrudDescriptionsParams\n  children?: CrudSchema[]\n}\n\ninterface CrudSearchParams extends Omit<FormSchema, 'field'> {\n  // 是否隐藏在查询项\n  hidden?: boolean\n}\n\ninterface CrudTableParams extends Omit<TableColumn, 'field'> {\n  // 是否隐藏表头\n  hidden?: boolean\n}\n\ninterface CrudFormParams extends Omit<FormSchema, 'field'> {\n  // 是否隐藏表单项\n  hidden?: boolean\n}\n\ninterface CrudDescriptionsParams extends Omit<DescriptionsSchema, 'field'> {\n  // 是否隐藏表单项\n  hidden?: boolean\n}\n\ninterface AllSchemas {\n  searchSchema: FormSchema[]\n  tableColumns: TableColumn[]\n  formSchema: FormSchema[]\n  detailSchema: DescriptionsSchema[]\n}\n\n/**\n * @deprecated 不推荐使用，感觉过于繁琐，不是很灵活 可能会在某个版本中删除\n */\nexport const useCrudSchemas = (\n  crudSchema: CrudSchema[]\n): {\n  allSchemas: AllSchemas\n} => {\n  // 所有结构数据\n  const allSchemas = reactive<AllSchemas>({\n    searchSchema: [],\n    tableColumns: [],\n    formSchema: [],\n    detailSchema: []\n  })\n\n  const searchSchema = filterSearchSchema(crudSchema)\n  // @ts-ignore\n  allSchemas.searchSchema = searchSchema || []\n\n  const tableColumns = filterTableSchema(crudSchema)\n  allSchemas.tableColumns = tableColumns || []\n\n  const formSchema = filterFormSchema(crudSchema)\n  allSchemas.formSchema = formSchema\n\n  const detailSchema = filterDescriptionsSchema(crudSchema)\n  allSchemas.detailSchema = detailSchema\n\n  return {\n    allSchemas\n  }\n}\n\n// 过滤 Search 结构\nconst filterSearchSchema = (crudSchema: CrudSchema[]): FormSchema[] => {\n  const searchSchema: FormSchema[] = []\n  const length = crudSchema.length\n\n  for (let i = 0; i < length; i++) {\n    const schemaItem = crudSchema[i]\n    if (schemaItem.search?.hidden === true) {\n      continue\n    }\n    // 判断是否隐藏\n    const searchSchemaItem = {\n      component: schemaItem?.search?.component || 'Input',\n      ...schemaItem.search,\n      field: schemaItem.field,\n      label: schemaItem.search?.label || schemaItem.label\n    }\n\n    searchSchema.push(searchSchemaItem)\n  }\n\n  return searchSchema\n}\n\n// 过滤 table 结构\nconst filterTableSchema = (crudSchema: CrudSchema[]): TableColumn[] => {\n  const tableColumns = treeMap<CrudSchema>(crudSchema, {\n    conversion: (schema: CrudSchema) => {\n      if (!schema?.table?.hidden) {\n        return {\n          ...schema,\n          ...schema.table\n        }\n      }\n    }\n  })\n\n  // 第一次过滤会有 undefined 所以需要二次过滤\n  return filter<TableColumn>(tableColumns as TableColumn[], (data) => {\n    if (data.children === void 0) {\n      delete data.children\n    }\n    return !!data.field\n  })\n}\n\n// 过滤 form 结构\nconst filterFormSchema = (crudSchema: CrudSchema[]): FormSchema[] => {\n  const formSchema: FormSchema[] = []\n  const length = crudSchema.length\n\n  for (let i = 0; i < length; i++) {\n    const formItem = crudSchema[i]\n    const formSchemaItem = {\n      component: formItem?.form?.component || 'Input',\n      ...formItem.form,\n      field: formItem.field,\n      label: formItem.form?.label || formItem.label\n    }\n\n    formSchema.push(formSchemaItem)\n  }\n\n  return formSchema\n}\n\n// 过滤 descriptions 结构\nconst filterDescriptionsSchema = (crudSchema: CrudSchema[]): DescriptionsSchema[] => {\n  const descriptionsSchema: FormSchema[] = []\n\n  eachTree(crudSchema, (schemaItem: CrudSchema) => {\n    // 判断是否隐藏\n    if (!schemaItem?.detail?.hidden) {\n      const descriptionsSchemaItem = {\n        ...schemaItem.detail,\n        field: schemaItem.field,\n        label: schemaItem.detail?.label || schemaItem.label\n      }\n\n      // 删除不必要的字段\n      delete descriptionsSchemaItem.hidden\n\n      descriptionsSchema.push(descriptionsSchemaItem)\n    }\n  })\n\n  return descriptionsSchema\n}\n"],"names":["useCrudSchemas","crudSchema","allSchemas","reactive","searchSchema","filterSearchSchema","tableColumns","filterTableSchema","formSchema","filterFormSchema","detailSchema","filterDescriptionsSchema","length","i","schemaItem","_a","searchSchemaItem","__spreadProps","__spreadValues","_b","_c","treeMap","schema","filter","data","formItem","formSchemaItem","descriptionsSchema","eachTree","descriptionsSchemaItem"],"mappings":"+gBA4Ca,MAAAA,EACXC,GAGG,CAEH,MAAMC,EAAaC,EAAqB,CACtC,aAAc,CAAC,EACf,aAAc,CAAC,EACf,WAAY,CAAC,EACb,aAAc,CAAA,CAAC,CAChB,EAEKC,EAAeC,EAAmBJ,CAAU,EAEvCC,EAAA,aAAeE,EAEpB,MAAAE,EAAeC,EAAkBN,CAAU,EACtCC,EAAA,aAAeI,GAAgB,CAAC,EAErC,MAAAE,EAAaC,EAAiBR,CAAU,EAC9CC,EAAW,WAAaM,EAElB,MAAAE,EAAeC,EAAyBV,CAAU,EACxD,OAAAC,EAAW,aAAeQ,EAEnB,CACL,WAAAR,CACF,CACF,EAGMG,EAAsBJ,GAA2C,WACrE,MAAMG,EAA6B,CAAC,EAC9BQ,EAASX,EAAW,OAE1B,QAASY,EAAI,EAAGA,EAAID,EAAQC,IAAK,CACzB,MAAAC,EAAab,EAAWY,CAAC,EAC3B,KAAAE,EAAAD,EAAW,SAAX,YAAAC,EAAmB,UAAW,GAChC,SAGF,MAAMC,EAAmBC,EAAAC,EAAA,CACvB,YAAWC,EAAAL,GAAA,YAAAA,EAAY,SAAZ,YAAAK,EAAoB,YAAa,SACzCL,EAAW,QAFS,CAGvB,MAAOA,EAAW,MAClB,QAAOM,EAAAN,EAAW,SAAX,YAAAM,EAAmB,QAASN,EAAW,KAChD,GAEAV,EAAa,KAAKY,CAAgB,CAAA,CAG7B,OAAAZ,CACT,EAGMG,EAAqBN,GAA4C,CAC/D,MAAAK,EAAee,EAAoBpB,EAAY,CACnD,WAAaqB,GAAuB,OAC9B,GAAA,GAACP,EAAAO,GAAA,YAAAA,EAAQ,QAAR,MAAAP,EAAe,QACX,OAAAG,IAAA,GACFI,GACAA,EAAO,MAEd,CACF,CACD,EAGM,OAAAC,EAAoBjB,EAAgCkB,IACrDA,EAAK,WAAa,QACpB,OAAOA,EAAK,SAEP,CAAC,CAACA,EAAK,MACf,CACH,EAGMf,EAAoBR,GAA2C,SACnE,MAAMO,EAA2B,CAAC,EAC5BI,EAASX,EAAW,OAE1B,QAASY,EAAI,EAAGA,EAAID,EAAQC,IAAK,CACzB,MAAAY,EAAWxB,EAAWY,CAAC,EACvBa,EAAiBT,EAAAC,EAAA,CACrB,YAAWH,EAAAU,GAAA,YAAAA,EAAU,OAAV,YAAAV,EAAgB,YAAa,SACrCU,EAAS,MAFS,CAGrB,MAAOA,EAAS,MAChB,QAAON,EAAAM,EAAS,OAAT,YAAAN,EAAe,QAASM,EAAS,KAC1C,GAEAjB,EAAW,KAAKkB,CAAc,CAAA,CAGzB,OAAAlB,CACT,EAGMG,EAA4BV,GAAmD,CACnF,MAAM0B,EAAmC,CAAC,EAEjC,OAAAC,EAAA3B,EAAaa,GAA2B,SAE3C,GAAA,GAACC,EAAAD,GAAA,YAAAA,EAAY,SAAZ,MAAAC,EAAoB,QAAQ,CAC/B,MAAMc,EAAyBZ,EAAAC,EAAA,GAC1BJ,EAAW,QADe,CAE7B,MAAOA,EAAW,MAClB,QAAOK,EAAAL,EAAW,SAAX,YAAAK,EAAmB,QAASL,EAAW,KAChD,GAGA,OAAOe,EAAuB,OAE9BF,EAAmB,KAAKE,CAAsB,CAAA,CAChD,CACD,EAEMF,CACT"}