{"version":3,"file":"Highlight.vue_vue_type_script_lang-o1-2T4Jo.js","sources":["../../src/components/Highlight/src/Highlight.vue"],"sourcesContent":["<script lang=\"tsx\">\nimport { defineComponent, PropType, computed, h, unref } from 'vue'\nimport { propTypes } from '@/utils/propTypes'\n\nexport default defineComponent({\n  name: 'Highlight',\n  props: {\n    tag: propTypes.string.def('span'),\n    keys: {\n      type: Array as PropType<string[]>,\n      default: () => []\n    },\n    color: propTypes.string.def('var(--el-color-primary)')\n  },\n  emits: ['click'],\n  setup(props, { emit, slots }) {\n    const keyNodes = computed(() => {\n      return props.keys.map((key) => {\n        return h(\n          'span',\n          {\n            onClick: () => {\n              emit('click', key)\n            },\n            style: {\n              color: props.color,\n              cursor: 'pointer'\n            }\n          },\n          key\n        )\n      })\n    })\n\n    const parseText = (text: string) => {\n      props.keys.forEach((key, index) => {\n        const regexp = new RegExp(key, 'g')\n        text = text.replace(regexp, `{{${index}}}`)\n      })\n      return text.split(/{{|}}/)\n    }\n\n    const renderText = () => {\n      if (!slots?.default) return null\n      const node = slots?.default()[0].children\n\n      if (!node) {\n        return slots?.default()[0]\n      }\n\n      const textArray = parseText(node as string)\n      const regexp = /^[0-9]*$/\n      const nodes = textArray.map((t) => {\n        if (regexp.test(t)) {\n          return unref(keyNodes)[t] || t\n        }\n        return t\n      })\n      return h(props.tag, nodes)\n    }\n\n    return () => renderText()\n  }\n})\n</script>\n"],"names":["defineComponent","name","props","tag","propTypes","string","def","keys","type","Array","default","color","emits","setup","emit","slots","keyNodes","computed","map","key","h","onClick","style","cursor","parseText","text","forEach","index","regexp","RegExp","replace","split","renderText","node","children","textArray","nodes","t","test","unref"],"mappings":"sGAIA,MAAeA,IAAgB,CAC7BC,KAAM,YACNC,MAAO,CACLC,IAAKC,EAAUC,OAAOC,IAAI,MAAM,EAChCC,KAAM,CACJC,KAAMC,MACNC,QAASA,IAAM,CAAA,CAChB,EACDC,MAAOP,EAAUC,OAAOC,IAAI,yBAAyB,CACtD,EACDM,MAAO,CAAC,OAAO,EACfC,MAAMX,EAAO,CAAEY,KAAAA,EAAMC,MAAAA,CAAM,EAAG,CAC5B,MAAMC,EAAWC,EAAS,IACjBf,EAAMK,KAAKW,IAAKC,GACdC,EACL,OACA,CACEC,QAASA,IAAM,CACbP,EAAK,QAASK,CAAG,CAClB,EACDG,MAAO,CACLX,MAAOT,EAAMS,MACbY,OAAQ,SACV,CACD,EACDJ,CACF,CACD,CACF,EAEKK,EAAaC,IACjBvB,EAAMK,KAAKmB,QAAQ,CAACP,EAAKQ,IAAU,CACjC,MAAMC,EAAS,IAAIC,OAAOV,EAAK,GAAG,EAClCM,EAAOA,EAAKK,QAAQF,EAAQ,KAAKD,CAAK,IAAI,CAC5C,CAAC,EACMF,EAAKM,MAAM,OAAO,GAGrBC,EAAaA,IAAM,CACvB,GAAI,EAACjB,GAAAA,MAAAA,EAAOL,SAAS,OAAO,KAC5B,MAAMuB,EAAOlB,GAAAA,YAAAA,EAAOL,UAAU,GAAGwB,SAEjC,GAAI,CAACD,EACH,OAAOlB,GAAAA,YAAAA,EAAOL,UAAU,GAG1B,MAAMyB,EAAYX,EAAUS,CAAc,EACpCL,EAAS,WACTQ,EAAQD,EAAUjB,IAAKmB,GACvBT,EAAOU,KAAKD,CAAC,GACRE,EAAMvB,CAAQ,EAAEqB,CAAC,GAAKA,CAGhC,EACD,OAAOjB,EAAElB,EAAMC,IAAKiC,CAAK,CAC3B,EAEA,MAAO,IAAMJ,EAAW,CAC1B,CACF,CAAC"}