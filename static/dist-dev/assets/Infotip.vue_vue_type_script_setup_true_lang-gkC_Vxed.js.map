{"version":3,"file":"Infotip.vue_vue_type_script_setup_true_lang-gkC_Vxed.js","sources":["../../src/components/Infotip/src/Infotip.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { PropType } from 'vue'\nimport { Highlight } from '@/components/Highlight'\nimport { useDesign } from '@/hooks/web/useDesign'\nimport { propTypes } from '@/utils/propTypes'\nimport { InfoTipSchema } from './types'\n\nconst { getPrefixCls } = useDesign()\n\nconst prefixCls = getPrefixCls('infotip')\n\ndefineProps({\n  title: propTypes.string.def(''),\n  schema: {\n    type: Array as PropType<Array<string | InfoTipSchema>>,\n    required: true,\n    default: () => []\n  },\n  showIndex: propTypes.bool.def(true),\n  highlightColor: propTypes.string.def('var(--el-color-primary)')\n})\n\nconst emit = defineEmits(['click'])\n\nconst keyClick = (key: string) => {\n  emit('click', key)\n}\n</script>\n\n<template>\n  <div\n    :class=\"[\n      prefixCls,\n      'p-20px mb-20px border-1px border-solid border-[var(--el-color-primary)] bg-[var(--el-color-primary-light-9)]'\n    ]\"\n  >\n    <div v-if=\"title\" :class=\"[`${prefixCls}__header`, 'flex items-center']\">\n      <Icon icon=\"vi-bi:exclamation-circle-fill\" :size=\"22\" color=\"var(--el-color-primary)\" />\n      <span :class=\"[`${prefixCls}__title`, 'pl-5px text-16px font-bold']\">{{ title }}</span>\n    </div>\n    <div :class=\"`${prefixCls}__content`\">\n      <p v-for=\"(item, $index) in schema\" :key=\"$index\" class=\"text-14px mt-15px\">\n        <Highlight\n          :keys=\"typeof item === 'string' ? [] : item.keys\"\n          :color=\"highlightColor\"\n          @click=\"keyClick\"\n        >\n          {{ showIndex ? `${$index + 1}„ÄÅ` : '' }}{{ typeof item === 'string' ? item : item.label }}\n        </Highlight>\n      </p>\n    </div>\n  </div>\n</template>\n"],"names":["getPrefixCls","useDesign","prefixCls","emit","__emit","keyClick","key"],"mappings":"2dAOM,KAAA,CAAE,aAAAA,CAAa,EAAIC,EAAU,EAE7BC,EAAYF,EAAa,SAAS,EAalCG,EAAOC,EAEPC,EAAYC,GAAgB,CAChCH,EAAK,QAASG,CAAG,CACnB"}