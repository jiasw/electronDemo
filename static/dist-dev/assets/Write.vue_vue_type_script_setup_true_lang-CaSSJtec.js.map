{"version":3,"file":"Write.vue_vue_type_script_setup_true_lang-CaSSJtec.js","sources":["../../src/views/Authorization/Role/components/Write.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { Form, FormSchema } from '@/components/Form'\nimport { useForm } from '@/hooks/web/useForm'\nimport { PropType, reactive, watch, ref, unref, nextTick } from 'vue'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { ElTree, ElCheckboxGroup, ElCheckbox } from 'element-plus'\nimport { getMenuListApi } from '@/api/menu'\nimport { filter, eachTree } from '@/utils/tree'\nimport { findIndex } from '@/utils'\n\nconst { t } = useI18n()\n\nconst { required } = useValidator()\n\nconst props = defineProps({\n  currentRow: {\n    type: Object as PropType<any>,\n    default: () => null\n  }\n})\n\nconst treeRef = ref<typeof ElTree>()\n\nconst formSchema = ref<FormSchema[]>([\n  {\n    field: 'roleName',\n    label: t('role.roleName'),\n    component: 'Input'\n  },\n  {\n    field: 'status',\n    label: t('menu.status'),\n    component: 'Select',\n    componentProps: {\n      options: [\n        {\n          label: t('userDemo.disable'),\n          value: 0\n        },\n        {\n          label: t('userDemo.enable'),\n          value: 1\n        }\n      ]\n    }\n  },\n  {\n    field: 'menu',\n    label: t('role.menu'),\n    colProps: {\n      span: 24\n    },\n    formItemProps: {\n      slots: {\n        default: () => {\n          return (\n            <>\n              <div class=\"flex w-full\">\n                <div class=\"flex-1\">\n                  <ElTree\n                    ref={treeRef}\n                    show-checkbox\n                    node-key=\"id\"\n                    highlight-current\n                    check-strictly\n                    expand-on-click-node={false}\n                    data={treeData.value}\n                    onNode-click={nodeClick}\n                  >\n                    {{\n                      default: (data) => {\n                        return <span>{data.data.meta.title}</span>\n                      }\n                    }}\n                  </ElTree>\n                </div>\n                <div class=\"flex-1\">\n                  {unref(currentTreeData) && unref(currentTreeData)?.permissionList ? (\n                    <ElCheckboxGroup v-model={unref(currentTreeData).meta.permission}>\n                      {unref(currentTreeData)?.permissionList.map((v: any) => {\n                        return <ElCheckbox label={v.value}>{v.label}</ElCheckbox>\n                      })}\n                    </ElCheckboxGroup>\n                  ) : null}\n                </div>\n              </div>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst currentTreeData = ref()\nconst nodeClick = (treeData: any) => {\n  currentTreeData.value = treeData\n}\n\nconst rules = reactive({\n  roleName: [required()],\n  role: [required()],\n  status: [required()]\n})\n\nconst { formRegister, formMethods } = useForm()\nconst { setValues, getFormData, getElFormExpose } = formMethods\n\nconst treeData = ref([])\nconst getMenuList = async () => {\n  const res = await getMenuListApi()\n  if (res) {\n    treeData.value = res.data.list\n    if (!props.currentRow) return\n    await nextTick()\n    const checked: any[] = []\n    eachTree(props.currentRow.menu, (v) => {\n      checked.push({\n        id: v.id,\n        permission: v.meta?.permission || []\n      })\n    })\n    eachTree(treeData.value, (v) => {\n      const index = findIndex(checked, (item) => {\n        return item.id === v.id\n      })\n      if (index > -1) {\n        const meta = { ...(v.meta || {}) }\n        meta.permission = checked[index].permission\n        v.meta = meta\n      }\n    })\n    for (const item of checked) {\n      unref(treeRef)?.setChecked(item.id, true, false)\n    }\n    // unref(treeRef)?.setCheckedKeys(\n    //   checked.map((v) => v.id),\n    //   false\n    // )\n  }\n}\ngetMenuList()\n\nconst submit = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate().catch((err) => {\n    console.log(err)\n  })\n  if (valid) {\n    const formData = await getFormData()\n    const checkedKeys = unref(treeRef)?.getCheckedKeys() || []\n    const data = filter(unref(treeData), (item: any) => {\n      return checkedKeys.includes(item.id)\n    })\n    formData.menu = data || []\n    console.log(formData)\n    return formData\n  }\n}\n\nwatch(\n  () => props.currentRow,\n  (currentRow) => {\n    if (!currentRow) return\n    setValues(currentRow)\n  },\n  {\n    deep: true,\n    immediate: true\n  }\n)\n\ndefineExpose({\n  submit\n})\n</script>\n\n<template>\n  <Form :rules=\"rules\" @register=\"formRegister\" :schema=\"formSchema\" />\n</template>\n"],"names":["t","useI18n","required","useValidator","props","__props","treeRef","ref","formSchema","field","label","component","componentProps","options","value","colProps","span","formItemProps","slots","default","_createVNode","_Fragment","ElTree","treeData","nodeClick","data","meta","title","unref","currentTreeData","permissionList","ElCheckboxGroup","permission","$event","map","v","ElCheckbox","rules","reactive","roleName","role","status","formRegister","formMethods","useForm","setValues","getFormData","getElFormExpose","__async","res","getMenuListApi","list","currentRow","nextTick","checked","eachTree","menu","push","id","index","findIndex","item","__spreadValues","setChecked","submit","elForm","validate","catch","err","console","log","formData","checkedKeys","getCheckedKeys","filter","includes","watch","deep","immediate","__expose"],"mappings":"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"}