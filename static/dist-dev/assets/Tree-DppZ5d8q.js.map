{"version":3,"file":"Tree-DppZ5d8q.js","sources":["../../src/components/Tree/src/Tree.vue","../../src/views/Components/Tree.vue"],"sourcesContent":["<script lang=\"tsx\" setup>\nimport { defineProps, defineEmits, ref, CSSProperties } from 'vue'\nimport { ElTree } from 'element-plus'\n\ninterface TreeProps {\n  data: any[]\n  treeProps?: Record<string, any>\n  width?: string\n  height?: string\n}\nconst props = defineProps<TreeProps>()\n\nconst emit = defineEmits<{\n  (e: 'node-click', nodeData: any): void\n  (e: 'node-expand', nodeData: any): void\n  (e: 'node-collapse', nodeData: any): void\n}>()\n\nconst treeContainer = ref<any>(null)\nconst showTreeMenu = ref(false)\nconst contextNode = ref<any>(null)\n\nconst menuStyle = ref<any>({})\n\nconst defaultWidth = '300px'\nconst defaultHeight = '400px'\n\n// 关闭菜单\nconst closeTreeMenu = () => {\n  showTreeMenu.value = false\n  document.removeEventListener('click', closeTreeMenu)\n  document.removeEventListener('contextmenu', closeTreeMenu)\n}\n\n// 右键菜单事件处理函数\nconst openTreeMenu = (event: MouseEvent, data: any, _node: any, _target: HTMLElement) => {\n  contextNode.value = data\n  if (!treeContainer.value) return\n\n  const containerRect = treeContainer.value.getBoundingClientRect()\n  const nodeRect = (event.target as HTMLElement).getBoundingClientRect()\n\n  // 计算菜单相对于父容器定位的坐标\n  const top = nodeRect.top - containerRect.top + treeContainer.value.scrollTop\n  const left = nodeRect.left - containerRect.left + treeContainer.value.scrollLeft\n\n  menuStyle.value = {\n    position: 'absolute',\n    top: `${top + 20}px`,\n    left: `${left + 20}px`\n  }\n\n  showTreeMenu.value = true\n\n  // 点击其他地方或再次右键关闭菜单\n  document.addEventListener('click', closeTreeMenu)\n  document.addEventListener('contextmenu', closeTreeMenu)\n}\n\n// 节点点击事件\nconst handleNodeClick = (data: any) => {\n  emit('node-click', data)\n  closeTreeMenu()\n}\n\n// 节点展开事件\nconst handleNodeExpand = (data: any) => {\n  emit('node-expand', data)\n  closeTreeMenu()\n}\n\n// 节点关闭事件\nconst handleNodeCollapse = (data: any) => {\n  emit('node-collapse', data)\n  closeTreeMenu()\n}\n\n// 计算容器样式\nconst containerStyle: CSSProperties = {\n  position: 'relative',\n  overflow: 'auto',\n  width: props.width ?? defaultWidth,\n  height: props.height ?? defaultHeight\n}\n</script>\n<template>\n  <div class=\"tree-container\" ref=\"treeContainer\" :style=\"containerStyle\">\n    <ElTree\n      v-bind=\"treeProps\"\n      :data=\"data\"\n      @node-click=\"handleNodeClick\"\n      @node-expand=\"handleNodeExpand\"\n      @node-collapse=\"handleNodeCollapse\"\n      @node-contextmenu=\"openTreeMenu\"\n    >\n      <template #default=\"{ node }\">\n        <!-- 如果使用者提供了 render-node slot，则渲染使用者的内容 -->\n        <template v-if=\"$slots['render-node']\">\n          <slot name=\"render-node\" :node=\"node\"></slot>\n        </template>\n        <!-- 否则使用默认节点显示（比如使用 node.label ）-->\n        <template v-else>\n          <span>{{ node.label }}</span>\n        </template>\n      </template>\n    </ElTree>\n    <div class=\"treeMenu\" v-show=\"showTreeMenu\" :style=\"menuStyle\">\n      <!-- 用户通过 context-menu slot 来自定义菜单内容 -->\n      <slot name=\"context-menu\" :node=\"contextNode\" :data=\"contextNode\">\n        <!-- 如果用户不提供 context-menu slot，可给一个默认内容 -->\n        <div style=\"padding: 8px\">No menu defined</div>\n      </slot>\n    </div>\n    <slot></slot>\n  </div>\n</template>\n<style scoped lang=\"less\">\n.treeMenu {\n  position: absolute;\n  padding: 5px;\n  font-size: 14px;\n  color: #606266;\n  background-color: rgb(255 255 255 / 90%);\n  border: 1px solid #dcdcdc;\n  border-radius: 5px;\n  box-shadow: 0 4px 10px rgb(0 0 0 / 40%);\n\n  /* 移除 overflow: hidden; 或尝试不使用负的 top 值 */\n\n  /* overflow: hidden; */\n\n  &::after {\n    position: absolute;\n\n    /* 将箭头向上移动到菜单外部 */\n    top: -6px;\n    left: 50%;\n    border-right: 6px solid transparent;\n    border-bottom: 6px solid rgb(206 194 194);\n\n    /* 创建一个向上的箭头 */\n    border-left: 6px solid transparent;\n    content: '';\n    transform: translateX(-50%);\n  }\n}\n</style>\n","<script setup lang=\"tsx\">\nimport { Icon } from '@/components/Icon'\nimport { Tree } from '@/components/Tree'\nimport { ContentWrap } from '@/components/ContentWrap'\nimport { useI18n } from 'vue-i18n'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { ref } from 'vue'\n\nconst { t } = useI18n()\nconst treeData = ref([\n  {\n    id: 1,\n    name: '北京',\n    children: [\n      {\n        id: 5,\n        name: '朝阳',\n        children: [\n          {\n            id: 17,\n            name: '双塔',\n            children: []\n          },\n          {\n            id: 18,\n            name: '龙城',\n            children: []\n          }\n        ]\n      },\n      {\n        id: 6,\n        name: '丰台',\n        children: [\n          {\n            id: 19,\n            name: '新村',\n            children: []\n          },\n          {\n            id: 20,\n            name: '大红门',\n            children: []\n          },\n          {\n            id: 21,\n            name: '长辛店',\n            children: [\n              {\n                id: 22,\n                name: '东山坡',\n                children: []\n              },\n              {\n                id: 23,\n                name: '北关',\n                children: []\n              },\n              {\n                id: 24,\n                name: '光明里',\n                children: []\n              },\n              {\n                id: 25,\n                name: '赵辛店',\n                children: []\n              },\n              {\n                id: 26,\n                name: '西峰寺',\n                children: []\n              }\n            ]\n          }\n        ]\n      },\n      {\n        id: 7,\n        name: '海淀',\n        children: []\n      },\n      {\n        id: 8,\n        name: '房山',\n        children: []\n      },\n      {\n        id: 10,\n        name: '顺义',\n        children: []\n      }\n    ]\n  },\n  {\n    id: 2,\n    name: '上海',\n    children: [\n      {\n        id: 11,\n        name: '黄埔',\n        children: []\n      },\n      {\n        id: 12,\n        name: '徐汇',\n        children: []\n      }\n    ]\n  },\n  {\n    id: 3,\n    name: '广州',\n    children: [\n      {\n        id: 13,\n        name: '荔湾',\n        children: []\n      },\n      {\n        id: 14,\n        name: '白云',\n        children: []\n      },\n      {\n        id: 15,\n        name: '越秀',\n        children: []\n      },\n      {\n        id: 16,\n        name: '南沙',\n        children: []\n      }\n    ]\n  }\n])\n\nconst handleNodeClick = (data: any) => {\n  console.log('Node clicked:', data)\n}\n\nconst addOrg = (node: any) => {\n  ElMessageBox.prompt('请输入分组名称', '添加子分组', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    inputPattern: /\\S/,\n    inputErrorMessage: '分组名称不能为空'\n  }).then(({ value }) => {\n    node.children.push({\n      id: node.children.length + 1,\n      name: value,\n      children: []\n    })\n    ElMessage.success('添加成功')\n  })\n}\nconst editOrg = (node: any) => {\n  ElMessageBox.prompt('请输入新的分组名称', '修改分组名称', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    inputValue: node.name,\n    inputPattern: /\\S/,\n    inputErrorMessage: '分组名称不能为空'\n  }).then(({ value }) => {\n    node.name = value\n    ElMessage.success('修改成功')\n  })\n}\n\nconst deleteOrg = (node: any) => {\n  ElMessageBox.confirm(`删除 [${node.name}] 分组、下级子分组 <br>是否继续?`, '提示', {\n    dangerouslyUseHTMLString: true,\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning',\n    center: true\n  }).then(() => {\n    const id = node.id\n    // 查找 treeData 中对应的节点，并删除\n    const deleteNode = (data: any) => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].id === id) {\n          data.splice(i, 1)\n          return\n        }\n        if (data[i].children) {\n          deleteNode(data[i].children)\n        }\n      }\n    }\n    deleteNode(treeData.value)\n    ElMessage.success('删除成功')\n  })\n}\n</script>\n\n<template>\n  <ContentWrap :title=\"t('treeDemo.treeTitle')\" :message=\"t('qrcodeDemo.qrcodeDes')\">\n    <Tree\n      :data=\"treeData\"\n      :tree-props=\"{\n        highlightCurrent: true,\n        nodeKey: 'id',\n        props: {\n          children: 'children',\n          label: 'name'\n        }\n      }\"\n      width=\"300px\"\n      height=\"400px\"\n      @node-click=\"handleNodeClick\"\n    >\n      <!-- 自定义右键菜单 -->\n      <template #context-menu=\"{ node }\">\n        <div class=\"menuItem\" @click=\"addOrg(node)\">\n          <Icon icon=\"ep:plus\" style=\"color: #1e9fff\" />\n          <span>添加子分组</span>\n        </div>\n        <div class=\"menuItem\" @click=\"editOrg(node)\">\n          <Icon icon=\"ep:edit-pen\" style=\"color: #1e9fff\" />\n          修改分组名称\n        </div>\n        <div class=\"menuItem\" @click=\"deleteOrg(node)\">\n          <Icon icon=\"ep:delete\" style=\"color: #1e9fff\" />\n          删除分组及子分组\n        </div>\n      </template>\n\n      <!-- 自定义节点显示 -->\n      <!-- <template #render-node=\"{ node }\">\n      <span v-if=\"node.isLeaf\">[FILE] {{ node.label }}</span>\n      <span v-else>[FOLDER] {{ node.label }}</span>\n    </template> -->\n    </Tree>\n  </ContentWrap>\n</template>\n<style lang=\"less\" scoped>\n.menuItem {\n  display: flex;\n  padding: 2px 10px;\n  text-align: left;\n  box-sizing: border-box;\n  align-items: center; /* 垂直居中 */\n  gap: 5px; /* 图标和文字之间的间距，可根据需要调整 */\n}\n\n.menuItem:hover {\n  cursor: pointer;\n  background-color: #eee;\n}\n</style>\n"],"names":["defaultWidth","defaultHeight","props","__props","emit","__emit","treeContainer","ref","showTreeMenu","contextNode","menuStyle","closeTreeMenu","value","document","removeEventListener","openTreeMenu","event","data","_node","_target","containerRect","getBoundingClientRect","nodeRect","target","top","scrollTop","left","scrollLeft","position","addEventListener","handleNodeClick","handleNodeExpand","handleNodeCollapse","containerStyle","overflow","width","height","t","useI18n","treeData","id","name","children","console","log","addOrg","node","ElMessageBox","prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","push","length","ElMessage","success","editOrg","inputValue","deleteOrg","confirm","dangerouslyUseHTMLString","type","center","deleteNode","i","splice"],"mappings":"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"}