{"version":3,"file":"useForm-JzSftaNC.js","sources":["../../src/hooks/web/useForm.ts"],"sourcesContent":["import type { Form, FormExpose } from '@/components/Form'\nimport type { ElForm, ElFormItem } from 'element-plus'\nimport { ref, unref, nextTick } from 'vue'\nimport { FormSchema, FormSetProps, FormProps } from '@/components/Form'\nimport { isEmptyVal, isObject } from '@/utils/is'\n\nexport const useForm = () => {\n  // From实例\n  const formRef = ref<typeof Form & FormExpose>()\n\n  // ElForm实例\n  const elFormRef = ref<ComponentRef<typeof ElForm>>()\n\n  /**\n   * @param ref Form实例\n   * @param elRef ElForm实例\n   */\n  const register = (ref: typeof Form & FormExpose, elRef: ComponentRef<typeof ElForm>) => {\n    formRef.value = ref\n    elFormRef.value = elRef\n  }\n\n  const getForm = async () => {\n    await nextTick()\n    const form = unref(formRef)\n    if (!form) {\n      console.error('The form is not registered. Please use the register method to register')\n    }\n    return form\n  }\n\n  // 一些内置的方法\n  const methods = {\n    /**\n     * @description 设置form组件的props\n     * @param props form组件的props\n     */\n    setProps: async (props: FormProps = {}) => {\n      const form = await getForm()\n      form?.setProps(props)\n      if (props.model) {\n        form?.setValues(props.model)\n      }\n    },\n\n    /**\n     * @description 设置form的值\n     * @param data 需要设置的数据\n     */\n    setValues: async (data: Recordable) => {\n      const form = await getForm()\n      form?.setValues(data)\n    },\n\n    /**\n     * @description 设置schema\n     * @param schemaProps 需要设置的schemaProps\n     */\n    setSchema: async (schemaProps: FormSetProps[]) => {\n      const form = await getForm()\n      form?.setSchema(schemaProps)\n    },\n\n    /**\n     * @description 新增schema\n     * @param formSchema 需要新增数据\n     * @param index 在哪里新增\n     */\n    addSchema: async (formSchema: FormSchema, index?: number) => {\n      const form = await getForm()\n      form?.addSchema(formSchema, index)\n    },\n\n    /**\n     * @description 删除schema\n     * @param field 删除哪个数据\n     */\n    delSchema: async (field: string) => {\n      const form = await getForm()\n      form?.delSchema(field)\n    },\n\n    /**\n     * @description 获取表单数据\n     * @returns form data\n     */\n    getFormData: async <T = Recordable>(filterEmptyVal = true): Promise<T> => {\n      const form = await getForm()\n      const model = form?.formModel as any\n      if (filterEmptyVal) {\n        // 使用reduce过滤空值，并返回一个新对象\n        return Object.keys(model).reduce((prev, next) => {\n          const value = model[next]\n          if (!isEmptyVal(value)) {\n            if (isObject(value)) {\n              if (Object.keys(value).length > 0) {\n                prev[next] = value\n              }\n            } else {\n              prev[next] = value\n            }\n          }\n          return prev\n        }, {}) as T\n      } else {\n        return model as T\n      }\n    },\n\n    /**\n     * @description 获取表单组件的实例\n     * @param field 表单项唯一标识\n     * @returns component instance\n     */\n    getComponentExpose: async (field: string) => {\n      const form = await getForm()\n      return form?.getComponentExpose(field)\n    },\n\n    /**\n     * @description 获取formItem组件的实例\n     * @param field 表单项唯一标识\n     * @returns formItem instance\n     */\n    getFormItemExpose: async (field: string) => {\n      const form = await getForm()\n      return form?.getFormItemExpose(field) as ComponentRef<typeof ElFormItem>\n    },\n\n    /**\n     * @description 获取ElForm组件的实例\n     * @returns ElForm instance\n     */\n    getElFormExpose: async () => {\n      await getForm()\n      return unref(elFormRef)\n    },\n\n    getFormExpose: async () => {\n      await getForm()\n      return unref(formRef)\n    }\n  }\n\n  return {\n    formRegister: register,\n    formMethods: methods\n  }\n}\n"],"names":["useForm","formRef","ref","elFormRef","register","elRef","getForm","__async","nextTick","form","unref","_0","props","data","schemaProps","formSchema","index","field","filterEmptyVal","model","prev","next","value","isEmptyVal","isObject"],"mappings":"uTAMO,MAAMA,EAAU,IAAM,CAE3B,MAAMC,EAAUC,EAA8B,EAGxCC,EAAYD,EAAiC,EAM7CE,EAAW,CAACF,EAA+BG,IAAuC,CACtFJ,EAAQ,MAAQC,EAChBC,EAAU,MAAQE,CACpB,EAEMC,EAAU,IAAYC,EAAA,wBAC1B,MAAMC,EAAS,EACT,MAAAC,EAAOC,EAAMT,CAAO,EAC1B,OAAKQ,GACH,QAAQ,MAAM,wEAAwE,EAEjFA,CACT,GAmHO,MAAA,CACL,aAAcL,EACd,YAlHc,CAKd,SAAU,IAAiCO,IAAAJ,EAAA,WAAAI,GAAA,UAA1BC,EAAmB,GAAO,CACnC,MAAAH,EAAO,MAAMH,EAAQ,EAC3BG,GAAA,MAAAA,EAAM,SAASG,GACXA,EAAM,QACFH,GAAA,MAAAA,EAAA,UAAUG,EAAM,OAE1B,GAMA,UAAkBC,GAAqBN,EAAA,wBAC/B,MAAAE,EAAO,MAAMH,EAAQ,EAC3BG,GAAA,MAAAA,EAAM,UAAUI,EAClB,GAMA,UAAkBC,GAAgCP,EAAA,wBAC1C,MAAAE,EAAO,MAAMH,EAAQ,EAC3BG,GAAA,MAAAA,EAAM,UAAUK,EAClB,GAOA,UAAW,CAAOC,EAAwBC,IAAmBT,EAAA,wBACrD,MAAAE,EAAO,MAAMH,EAAQ,EACrBG,GAAA,MAAAA,EAAA,UAAUM,EAAYC,EAC9B,GAMA,UAAkBC,GAAkBV,EAAA,wBAC5B,MAAAE,EAAO,MAAMH,EAAQ,EAC3BG,GAAA,MAAAA,EAAM,UAAUQ,EAClB,GAMA,YAAa,CAAuBC,EAAiB,KAAqBX,EAAA,wBAClE,MAAAE,EAAO,MAAMH,EAAQ,EACrBa,EAAQV,GAAA,YAAAA,EAAM,UACpB,OAAIS,EAEK,OAAO,KAAKC,CAAK,EAAE,OAAO,CAACC,EAAMC,IAAS,CACzC,MAAAC,EAAQH,EAAME,CAAI,EACpB,OAACE,EAAWD,CAAK,IACfE,EAASF,CAAK,EACZ,OAAO,KAAKA,CAAK,EAAE,OAAS,IAC9BF,EAAKC,CAAI,EAAIC,GAGfF,EAAKC,CAAI,EAAIC,GAGVF,CACT,EAAG,EAAE,EAEED,CAEX,GAOA,mBAA2BF,GAAkBV,EAAA,wBACrC,MAAAE,EAAO,MAAMH,EAAQ,EACpB,OAAAG,GAAA,YAAAA,EAAM,mBAAmBQ,EAClC,GAOA,kBAA0BA,GAAkBV,EAAA,wBACpC,MAAAE,EAAO,MAAMH,EAAQ,EACpB,OAAAG,GAAA,YAAAA,EAAM,kBAAkBQ,EACjC,GAMA,gBAAiB,IAAYV,EAAA,wBAC3B,aAAMD,EAAQ,EACPI,EAAMP,CAAS,CACxB,GAEA,cAAe,IAAYI,EAAA,wBACzB,aAAMD,EAAQ,EACPI,EAAMT,CAAO,CAAA,EAExB,CAKA,CACF"}