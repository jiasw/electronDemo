{"version":3,"file":"EditInfo.vue_vue_type_script_setup_true_lang-B2sxzEoL.js","sources":["../../src/views/Personal/PersonalCenter/components/EditInfo.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { FormSchema, Form } from '@/components/Form'\nimport { useForm } from '@/hooks/web/useForm'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { reactive, ref, watch } from 'vue'\nimport { ElDivider, ElMessage, ElMessageBox } from 'element-plus'\n\nconst props = defineProps({\n  userInfo: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst { required, phone, maxlength, email } = useValidator()\n\nconst formSchema = reactive<FormSchema[]>([\n  {\n    field: 'realName',\n    label: '昵称',\n    component: 'Input',\n    colProps: {\n      span: 24\n    }\n  },\n  {\n    field: 'phoneNumber',\n    label: '手机号码',\n    component: 'Input',\n    colProps: {\n      span: 24\n    }\n  },\n  {\n    field: 'email',\n    label: '邮箱',\n    component: 'Input',\n    colProps: {\n      span: 24\n    }\n  }\n])\n\nconst rules = reactive({\n  realName: [required(), maxlength(50)],\n  phoneNumber: [phone()],\n  email: [email()]\n})\n\nconst { formRegister, formMethods } = useForm()\nconst { setValues, getElFormExpose } = formMethods\n\nwatch(\n  () => props.userInfo,\n  (value) => {\n    setValues(value)\n  },\n  {\n    immediate: true,\n    deep: true\n  }\n)\n\nconst saveLoading = ref(false)\nconst save = async () => {\n  const elForm = await getElFormExpose()\n  const valid = await elForm?.validate().catch((err) => {\n    console.log(err)\n  })\n  if (valid) {\n    ElMessageBox.confirm('是否确认修改?', '提示', {\n      confirmButtonText: '确认',\n      cancelButtonText: '取消',\n      type: 'warning'\n    })\n      .then(async () => {\n        try {\n          saveLoading.value = true\n          // 这里可以调用修改用户信息接口\n          ElMessage.success('修改成功')\n        } catch (error) {\n          console.log(error)\n        } finally {\n          saveLoading.value = false\n        }\n      })\n      .catch(() => {})\n  }\n}\n</script>\n\n<template>\n  <Form :rules=\"rules\" @register=\"formRegister\" :schema=\"formSchema\" />\n  <ElDivider />\n  <BaseButton type=\"primary\" @click=\"save\">保存</BaseButton>\n</template>\n"],"names":["props","__props","required","phone","maxlength","email","useValidator","formSchema","reactive","rules","formRegister","formMethods","useForm","setValues","getElFormExpose","watch","value","saveLoading","ref","save","__async","elForm","err","ElMessageBox","ElMessage","error"],"mappings":"ypBAOA,MAAMA,EAAQC,EAOR,CAAE,SAAAC,EAAU,MAAAC,EAAO,UAAAC,EAAW,MAAAC,CAAA,EAAUC,EAAa,EAErDC,EAAaC,EAAuB,CACxC,CACE,MAAO,WACP,MAAO,KACP,UAAW,QACX,SAAU,CACR,KAAM,EAAA,CAEV,EACA,CACE,MAAO,cACP,MAAO,OACP,UAAW,QACX,SAAU,CACR,KAAM,EAAA,CAEV,EACA,CACE,MAAO,QACP,MAAO,KACP,UAAW,QACX,SAAU,CACR,KAAM,EAAA,CACR,CACF,CACD,EAEKC,EAAQD,EAAS,CACrB,SAAU,CAACN,EAAA,EAAYE,EAAU,EAAE,CAAC,EACpC,YAAa,CAACD,GAAO,EACrB,MAAO,CAACE,EAAO,CAAA,CAAA,CAChB,EAEK,CAAE,aAAAK,EAAc,YAAAC,CAAY,EAAIC,EAAQ,EACxC,CAAE,UAAAC,EAAW,gBAAAC,CAAA,EAAoBH,EAEvCI,EACE,IAAMf,EAAM,SACXgB,GAAU,CACTH,EAAUG,CAAK,CACjB,EACA,CACE,UAAW,GACX,KAAM,EAAA,CAEV,EAEM,MAAAC,EAAcC,EAAI,EAAK,EACvBC,EAAO,IAAYC,EAAA,sBACjB,MAAAC,EAAS,MAAMP,EAAgB,GACvB,MAAMO,GAAA,YAAAA,EAAQ,WAAW,MAAOC,GAAQ,CACpD,QAAQ,IAAIA,CAAG,CAAA,KAGFC,EAAA,QAAQ,UAAW,KAAM,CACpC,kBAAmB,KACnB,iBAAkB,KAClB,KAAM,SAAA,CACP,EACE,KAAK,IAAYH,EAAA,sBACZ,GAAA,CACFH,EAAY,MAAQ,GAEpBO,EAAU,QAAQ,MAAM,QACjBC,EAAO,CACd,QAAQ,IAAIA,CAAK,CAAA,QACjB,CACAR,EAAY,MAAQ,EAAA,CACtB,EACD,EACA,MAAM,IAAM,CAAA,CAAE,CAErB"}