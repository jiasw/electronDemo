{"version":3,"file":"User-DXoI84Mw.js","sources":["../../src/views/Authorization/User/User.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { ContentWrap } from '@/components/ContentWrap'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { Table } from '@/components/Table'\nimport { ref, unref, nextTick, watch, reactive } from 'vue'\nimport { ElTree, ElInput, ElDivider } from 'element-plus'\nimport { getDepartmentApi, getUserByIdApi, saveUserApi, deleteUserByIdApi } from '@/api/department'\nimport type { DepartmentItem, DepartmentUserItem } from '@/api/department/types'\nimport { useTable } from '@/hooks/web/useTable'\nimport { Search } from '@/components/Search'\nimport Write from './components/Write.vue'\nimport Detail from './components/Detail.vue'\nimport { Dialog } from '@/components/Dialog'\nimport { getRoleListApi } from '@/api/role'\nimport { CrudSchema, useCrudSchemas } from '@/hooks/web/useCrudSchemas'\nimport { BaseButton } from '@/components/Button'\n\nconst { t } = useI18n()\n\nconst { tableRegister, tableState, tableMethods } = useTable({\n  fetchDataApi: async () => {\n    const { pageSize, currentPage } = tableState\n    const res = await getUserByIdApi({\n      id: unref(currentNodeKey),\n      pageIndex: unref(currentPage),\n      pageSize: unref(pageSize),\n      ...unref(searchParams)\n    })\n    return {\n      list: res.data.list || [],\n      total: res.data.total || 0\n    }\n  },\n  fetchDelApi: async () => {\n    const res = await deleteUserByIdApi(unref(ids))\n    return !!res\n  }\n})\nconst { total, loading, dataList, pageSize, currentPage } = tableState\nconst { getList, getElTableExpose, delList } = tableMethods\n\nconst crudSchemas = reactive<CrudSchema[]>([\n  {\n    field: 'selection',\n    search: {\n      hidden: true\n    },\n    form: {\n      hidden: true\n    },\n    detail: {\n      hidden: true\n    },\n    table: {\n      type: 'selection'\n    }\n  },\n  {\n    field: 'index',\n    label: t('userDemo.index'),\n    form: {\n      hidden: true\n    },\n    search: {\n      hidden: true\n    },\n    detail: {\n      hidden: true\n    },\n    table: {\n      type: 'index'\n    }\n  },\n  {\n    field: 'username',\n    label: t('userDemo.username')\n  },\n  {\n    field: 'account',\n    label: t('userDemo.account')\n  },\n  {\n    field: 'department.id',\n    label: t('userDemo.department'),\n    detail: {\n      hidden: true\n      // slots: {\n      //   default: (data: DepartmentUserItem) => {\n      //     return <>{data.department.departmentName}</>\n      //   }\n      // }\n    },\n    search: {\n      hidden: true\n    },\n    form: {\n      component: 'TreeSelect',\n      componentProps: {\n        nodeKey: 'id',\n        props: {\n          label: 'departmentName'\n        }\n      },\n      optionApi: async () => {\n        const res = await getDepartmentApi()\n        return res.data.list\n      }\n    },\n    table: {\n      hidden: true\n    }\n  },\n  {\n    field: 'role',\n    label: t('userDemo.role'),\n    search: {\n      hidden: true\n    },\n    form: {\n      component: 'Select',\n      value: [],\n      componentProps: {\n        multiple: true,\n        collapseTags: true,\n        maxCollapseTags: 1\n      },\n      optionApi: async () => {\n        const res = await getRoleListApi()\n        return res.data?.list?.map((v) => ({\n          label: v.roleName,\n          value: v.id\n        }))\n      }\n    }\n  },\n  {\n    field: 'email',\n    label: t('userDemo.email'),\n    form: {\n      component: 'Input'\n    },\n    search: {\n      hidden: true\n    }\n  },\n  {\n    field: 'createTime',\n    label: t('userDemo.createTime'),\n    form: {\n      component: 'Input'\n    },\n    search: {\n      hidden: true\n    }\n  },\n  {\n    field: 'action',\n    label: t('userDemo.action'),\n    form: {\n      hidden: true\n    },\n    detail: {\n      hidden: true\n    },\n    search: {\n      hidden: true\n    },\n    table: {\n      width: 240,\n      slots: {\n        default: (data: any) => {\n          const row = data.row as DepartmentUserItem\n          return (\n            <>\n              <BaseButton type=\"primary\" onClick={() => action(row, 'edit')}>\n                {t('exampleDemo.edit')}\n              </BaseButton>\n              <BaseButton type=\"success\" onClick={() => action(row, 'detail')}>\n                {t('exampleDemo.detail')}\n              </BaseButton>\n              <BaseButton type=\"danger\" onClick={() => delData(row)}>\n                {t('exampleDemo.del')}\n              </BaseButton>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\nconst { allSchemas } = useCrudSchemas(crudSchemas)\n\nconst searchParams = ref({})\nconst setSearchParams = (params: any) => {\n  currentPage.value = 1\n  searchParams.value = params\n  getList()\n}\n\nconst treeEl = ref<typeof ElTree>()\n\nconst currentNodeKey = ref('')\nconst departmentList = ref<DepartmentItem[]>([])\nconst fetchDepartment = async () => {\n  const res = await getDepartmentApi()\n  departmentList.value = res.data.list\n  currentNodeKey.value =\n    (res.data.list[0] && res.data.list[0]?.children && res.data.list[0].children[0].id) || ''\n  await nextTick()\n  unref(treeEl)?.setCurrentKey(currentNodeKey.value)\n}\nfetchDepartment()\n\nconst currentDepartment = ref('')\nwatch(\n  () => currentDepartment.value,\n  (val) => {\n    unref(treeEl)!.filter(val)\n  }\n)\n\nconst currentChange = (data: DepartmentItem) => {\n  // if (data.children) return\n  currentNodeKey.value = data.id\n  currentPage.value = 1\n  getList()\n}\n\nconst filterNode = (value: string, data: DepartmentItem) => {\n  if (!value) return true\n  return data.departmentName.includes(value)\n}\n\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\n\nconst currentRow = ref<DepartmentUserItem>()\nconst actionType = ref('')\n\nconst AddAction = () => {\n  dialogTitle.value = t('exampleDemo.add')\n  currentRow.value = undefined\n  dialogVisible.value = true\n  actionType.value = ''\n}\n\nconst delLoading = ref(false)\nconst ids = ref<string[]>([])\n\nconst delData = async (row?: DepartmentUserItem) => {\n  const elTableExpose = await getElTableExpose()\n  ids.value = row\n    ? [row.id]\n    : elTableExpose?.getSelectionRows().map((v: DepartmentUserItem) => v.id) || []\n  delLoading.value = true\n\n  await delList(unref(ids).length).finally(() => {\n    delLoading.value = false\n  })\n}\n\nconst action = (row: DepartmentUserItem, type: string) => {\n  dialogTitle.value = t(type === 'edit' ? 'exampleDemo.edit' : 'exampleDemo.detail')\n  actionType.value = type\n  currentRow.value = { ...row, department: unref(treeEl)?.getCurrentNode() || {} }\n  dialogVisible.value = true\n}\n\nconst writeRef = ref<ComponentRef<typeof Write>>()\n\nconst saveLoading = ref(false)\n\nconst save = async () => {\n  const write = unref(writeRef)\n  const formData = await write?.submit()\n  if (formData) {\n    saveLoading.value = true\n    try {\n      const res = await saveUserApi(formData)\n      if (res) {\n        currentPage.value = 1\n        getList()\n      }\n    } catch (error) {\n      console.log(error)\n    } finally {\n      saveLoading.value = false\n      dialogVisible.value = false\n    }\n  }\n}\n</script>\n\n<template>\n  <div class=\"flex w-100% h-100%\">\n    <ContentWrap class=\"w-250px\">\n      <div class=\"flex justify-center items-center\">\n        <div class=\"flex-1\">{{ t('userDemo.departmentList') }}</div>\n        <ElInput\n          v-model=\"currentDepartment\"\n          class=\"flex-[2]\"\n          :placeholder=\"t('userDemo.searchDepartment')\"\n          clearable\n        />\n      </div>\n      <ElDivider />\n      <ElTree\n        ref=\"treeEl\"\n        :data=\"departmentList\"\n        default-expand-all\n        :expand-on-click-node=\"false\"\n        node-key=\"id\"\n        :current-node-key=\"currentNodeKey\"\n        :props=\"{\n          label: 'departmentName'\n        }\"\n        :filter-node-method=\"filterNode\"\n        @current-change=\"currentChange\"\n      >\n        <template #default=\"{ data }\">\n          <div\n            :title=\"data.departmentName\"\n            class=\"whitespace-nowrap overflow-ellipsis overflow-hidden\"\n          >\n            {{ data.departmentName }}\n          </div>\n        </template>\n      </ElTree>\n    </ContentWrap>\n    <ContentWrap class=\"flex-[3] ml-20px\">\n      <Search\n        :schema=\"allSchemas.searchSchema\"\n        @reset=\"setSearchParams\"\n        @search=\"setSearchParams\"\n      />\n\n      <div class=\"mb-10px\">\n        <BaseButton type=\"primary\" @click=\"AddAction\">{{ t('exampleDemo.add') }}</BaseButton>\n        <BaseButton :loading=\"delLoading\" type=\"danger\" @click=\"delData()\">\n          {{ t('exampleDemo.del') }}\n        </BaseButton>\n      </div>\n      <Table\n        v-model:current-page=\"currentPage\"\n        v-model:page-size=\"pageSize\"\n        :columns=\"allSchemas.tableColumns\"\n        :data=\"dataList\"\n        :loading=\"loading\"\n        @register=\"tableRegister\"\n        :pagination=\"{\n          total\n        }\"\n      />\n    </ContentWrap>\n\n    <Dialog v-model=\"dialogVisible\" :title=\"dialogTitle\">\n      <Write\n        v-if=\"actionType !== 'detail'\"\n        ref=\"writeRef\"\n        :form-schema=\"allSchemas.formSchema\"\n        :current-row=\"currentRow\"\n      />\n\n      <Detail\n        v-if=\"actionType === 'detail'\"\n        :detail-schema=\"allSchemas.detailSchema\"\n        :current-row=\"currentRow\"\n      />\n\n      <template #footer>\n        <BaseButton\n          v-if=\"actionType !== 'detail'\"\n          type=\"primary\"\n          :loading=\"saveLoading\"\n          @click=\"save\"\n        >\n          {{ t('exampleDemo.save') }}\n        </BaseButton>\n        <BaseButton @click=\"dialogVisible = false\">{{ t('dialogDemo.close') }}</BaseButton>\n      </template>\n    </Dialog>\n  </div>\n</template>\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","t","useI18n","tableRegister","tableState","tableMethods","useTable","fetchDataApi","__async","pageSize","currentPage","res","getUserByIdApi","__spreadValues","id","unref","currentNodeKey","pageIndex","searchParams","list","data","total","fetchDelApi","deleteUserByIdApi","ids","loading","dataList","getList","getElTableExpose","delList","crudSchemas","reactive","field","search","hidden","form","detail","table","type","label","component","componentProps","nodeKey","props","optionApi","getDepartmentApi","value","multiple","collapseTags","maxCollapseTags","getRoleListApi","map","v","roleName","width","slots","default","_slot","_slot2","_slot3","row","_createVNode2","_Fragment","BaseButton","onClick","action","delData","allSchemas","useCrudSchemas","ref","setSearchParams","params","treeEl","departmentList","children","nextTick","setCurrentKey","currentDepartment","watch","val","filter","currentChange","filterNode","departmentName","includes","dialogVisible","dialogTitle","currentRow","actionType","AddAction","undefined","delLoading","elTableExpose","getSelectionRows","length","finally","__spreadProps","department","getCurrentNode","writeRef","saveLoading","save","write","formData","submit","saveUserApi","error","console","log"],"mappings":"y1FAe+C,SAAAA,EAAAC,EAAA,CAAA,OAAA,OAAAA,GAAA,YAAAC,OAAAC,UAAAC,SAAAC,KAAAJ,CAAA,IAAAK,mBAAAA,CAAAA,GAAAL,CAAA,CAAA,qCAE/C,KAAM,CAAEM,EAAAA,CAAG,EAAGC,GAAQ,EAEhB,CAAEC,cAAAA,EAAeC,WAAAA,EAAYC,aAAAA,CAAc,EAAGC,GAAS,CAC3DC,aAAc,IAAYC,EAAA,sBACxB,KAAM,CAAEC,SAAAA,EAAUC,YAAAA,CAAY,EAAIN,EAC5BO,EAAM,MAAMC,GAAeC,EAAA,CAC/BC,GAAIC,EAAMC,CAAc,EACxBC,UAAWF,EAAML,CAAW,EAC5BD,SAAUM,EAAMN,CAAQ,GACrBM,EAAMG,CAAY,EACtB,EACD,MAAO,CACLC,KAAMR,EAAIS,KAAKD,MAAQ,CAAE,EACzBE,MAAOV,EAAIS,KAAKC,OAAS,CAC3B,CACD,GACDC,YAAa,IAAYd,EAAA,sBAEvB,MAAO,CAAC,EADI,MAAMe,GAAkBR,EAAMS,CAAG,CAAC,EAEhD,EACF,CAAC,EACK,CAAEH,MAAAA,EAAOI,QAAAA,EAASC,SAAAA,EAAUjB,SAAAA,EAAUC,YAAAA,CAAY,EAAIN,EACtD,CAAEuB,QAAAA,EAASC,iBAAAA,EAAkBC,QAAAA,EAAQ,EAAIxB,EAEzCyB,GAAcC,GAAuB,CACzC,CACEC,MAAO,YACPC,OAAQ,CACNC,OAAQ,EACT,EACDC,KAAM,CACJD,OAAQ,EACT,EACDE,OAAQ,CACNF,OAAQ,EACT,EACDG,MAAO,CACLC,KAAM,WACR,CACF,EACA,CACEN,MAAO,QACPO,MAAOtC,EAAE,gBAAgB,EACzBkC,KAAM,CACJD,OAAQ,EACT,EACDD,OAAQ,CACNC,OAAQ,EACT,EACDE,OAAQ,CACNF,OAAQ,EACT,EACDG,MAAO,CACLC,KAAM,OACR,CACF,EACA,CACEN,MAAO,WACPO,MAAOtC,EAAE,mBAAmB,CAC9B,EACA,CACE+B,MAAO,UACPO,MAAOtC,EAAE,kBAAkB,CAC7B,EACA,CACE+B,MAAO,gBACPO,MAAOtC,EAAE,qBAAqB,EAC9BmC,OAAQ,CACNF,OAAQ,EAMT,EACDD,OAAQ,CACNC,OAAQ,EACT,EACDC,KAAM,CACJK,UAAW,aACXC,eAAgB,CACdC,QAAS,KACTC,MAAO,CACLJ,MAAO,gBACT,CACD,EACDK,UAAW,IAAYpC,EAAA,sBAErB,OADY,MAAMqC,EAAiB,GACxBzB,KAAKD,IAClB,EACD,EACDkB,MAAO,CACLH,OAAQ,EACV,CACF,EACA,CACEF,MAAO,OACPO,MAAOtC,EAAE,eAAe,EACxBgC,OAAQ,CACNC,OAAQ,EACT,EACDC,KAAM,CACJK,UAAW,SACXM,MAAO,CAAE,EACTL,eAAgB,CACdM,SAAU,GACVC,aAAc,GACdC,gBAAiB,CAClB,EACDL,UAAW,IAAYpC,EAAA,8BAErB,OAAOG,GAAAA,GADK,MAAMuC,GAAe,GACtB9B,OAAJT,YAAAA,EAAUQ,OAAVR,YAAAA,EAAgBwC,IAAKC,IAAO,CACjCb,MAAOa,EAAEC,SACTP,MAAOM,EAAEtC,EACX,GACF,EACF,CACF,EACA,CACEkB,MAAO,QACPO,MAAOtC,EAAE,gBAAgB,EACzBkC,KAAM,CACJK,UAAW,OACZ,EACDP,OAAQ,CACNC,OAAQ,EACV,CACF,EACA,CACEF,MAAO,aACPO,MAAOtC,EAAE,qBAAqB,EAC9BkC,KAAM,CACJK,UAAW,OACZ,EACDP,OAAQ,CACNC,OAAQ,EACV,CACF,EACA,CACEF,MAAO,SACPO,MAAOtC,EAAE,iBAAiB,EAC1BkC,KAAM,CACJD,OAAQ,EACT,EACDE,OAAQ,CACNF,OAAQ,EACT,EACDD,OAAQ,CACNC,OAAQ,EACT,EACDG,MAAO,CACLiB,MAAO,IACPC,MAAO,CACLC,QAAUpC,GAAc,CAAA,IAAAqC,EAAAC,EAAAC,EACtB,MAAMC,EAAMxC,EAAKwC,IACjB,OAAAC,EAAAC,GAAAD,KAAAA,CAAAA,EAAAE,EAAA,CAAA,KAAA,UAAA,QAEwCC,IAAMC,EAAOL,EAAK,MAAM,GAAClE,EAAA+D,EAC1DxD,EAAE,kBAAkB,CAAC,EAAAwD,EAAA,CAAAD,QAAAA,IAAA,CAAAC,CAAA,EAAAI,EAAAA,EAAAE,EAAA,CAAA,KAAA,UAAA,QAEYC,IAAMC,EAAOL,EAAK,QAAQ,GAAClE,EAAAgE,EAC5DzD,EAAE,oBAAoB,CAAC,EAAAyD,EAAA,CAAAF,QAAAA,IAAA,CAAAE,CAAA,EAAAG,EAAAA,EAAAE,EAAA,CAAA,KAAA,SAAA,QAESC,IAAME,EAAQN,CAAG,GAAClE,EAAAiE,EAClD1D,EAAE,iBAAiB,CAAC,EAAA0D,EAAA,CAAAH,QAAAA,IAAA,CAAAG,CAAA,CAAA,CAAA,CAAA,CAAA,CAI7B,CACF,CACF,CACF,CAAA,CACD,EAEK,CAAEQ,WAAAA,CAAW,EAAIC,GAAetC,EAAW,EAE3CZ,EAAemD,EAAI,EAAE,EACrBC,EAAmBC,GAAgB,CACvC7D,EAAYoC,MAAQ,EACpB5B,EAAa4B,MAAQyB,EACrB5C,EAAQ,CACV,EAEM6C,EAASH,EAAmB,EAE5BrD,EAAiBqD,EAAI,EAAE,EACvBI,EAAiBJ,EAAsB,EAAE,EACX7D,EAAA,8BAClC,MAAMG,EAAM,MAAMkC,EAAiB,EACnC4B,EAAe3B,MAAQnC,EAAIS,KAAKD,KAChCH,EAAe8B,MACZnC,EAAIS,KAAKD,KAAK,CAAC,KAAKR,EAAAA,EAAIS,KAAKD,KAAK,CAAC,IAAfR,YAAAA,EAAkB+D,WAAY/D,EAAIS,KAAKD,KAAK,CAAC,EAAEuD,SAAS,CAAC,EAAE5D,IAAO,GACzF,MAAM6D,GAAS,GACf5D,EAAAA,EAAMyD,CAAM,IAAZzD,MAAAA,EAAe6D,cAAc5D,EAAe8B,MAC9C,GAGA,MAAM+B,EAAoBR,EAAI,EAAE,EAChCS,GACE,IAAMD,EAAkB/B,MACvBiC,GAAQ,CACPhE,EAAMyD,CAAM,EAAGQ,OAAOD,CAAG,CAC3B,CACF,EAEA,MAAME,GAAiB7D,GAAyB,CAE9CJ,EAAe8B,MAAQ1B,EAAKN,GAC5BJ,EAAYoC,MAAQ,EACpBnB,EAAQ,CACV,EAEMuD,GAAaA,CAACpC,EAAe1B,IAC5B0B,EACE1B,EAAK+D,eAAeC,SAAStC,CAAK,EADtB,GAIfuC,EAAgBhB,EAAI,EAAK,EACzBiB,EAAcjB,EAAI,EAAE,EAEpBkB,EAAalB,EAAwB,EACrCmB,EAAanB,EAAI,EAAE,EAEnBoB,GAAYA,IAAM,CACtBH,EAAYxC,MAAQ7C,EAAE,iBAAiB,EACvCsF,EAAWzC,MAAQ4C,OACnBL,EAAcvC,MAAQ,GACtB0C,EAAW1C,MAAQ,EACrB,EAEM6C,EAAatB,EAAI,EAAK,EACtB7C,EAAM6C,EAAc,EAAE,EAEtBH,EAAiBN,GAA6BpD,EAAA,sBAClD,MAAMoF,EAAgB,MAAMhE,EAAiB,EAC7CJ,EAAIsB,MAAQc,EACR,CAACA,EAAI9C,EAAE,GACP8E,GAAAA,YAAAA,EAAeC,mBAAmB1C,IAAKC,GAA0BA,EAAEtC,MAAO,CAAC,EAC/E6E,EAAW7C,MAAQ,GAEnB,MAAMjB,GAAQd,EAAMS,CAAG,EAAEsE,MAAM,EAAEC,QAAQ,IAAM,CAC7CJ,EAAW7C,MAAQ,EACrB,CAAC,CACH,GAEMmB,EAASA,CAACL,EAAyBtB,IAAiB,OACxDgD,EAAYxC,MAAQ7C,EAAEqC,IAAS,OAAS,mBAAqB,oBAAoB,EACjFkD,EAAW1C,MAAQR,EACnBiD,EAAWzC,MAAQkD,EAAAnF,EAAA,GAAK+C,GAAL,CAAUqC,aAAYlF,EAAAA,EAAMyD,CAAM,IAAZzD,YAAAA,EAAemF,mBAAoB,CAAA,CAAG,GAC/Eb,EAAcvC,MAAQ,EACxB,EAEMqD,EAAW9B,EAAgC,EAE3C+B,EAAc/B,EAAI,EAAK,EAEvBgC,GAAO,IAAY7F,EAAA,sBACvB,MAAM8F,EAAQvF,EAAMoF,CAAQ,EACtBI,EAAW,MAAMD,GAAAA,YAAAA,EAAOE,SAC9B,GAAID,EAAU,CACZH,EAAYtD,MAAQ,GACpB,GAAI,EACU,MAAM2D,GAAYF,CAAQ,KAEpC7F,EAAYoC,MAAQ,EACpBnB,EAAQ,EAEX,OAAQ+E,EAAO,CACdC,QAAQC,IAAIF,CAAK,CACnB,QAAU,CACRN,EAAYtD,MAAQ,GACpBuC,EAAcvC,MAAQ,EACxB,CACF,CACF"}