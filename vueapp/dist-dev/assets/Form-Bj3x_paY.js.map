{"version":3,"file":"Form-Bj3x_paY.js","sources":["../../src/components/Form/src/helper/componentMap.ts","../../src/components/Form/src/types/index.ts","../../src/components/Form/src/helper/index.ts","../../src/components/Form/src/components/useRenderSelect.tsx","../../src/components/Form/src/components/useRenderRadio.tsx","../../src/components/Form/src/components/useRenderCheckbox.tsx","../../src/components/Form/src/Form.vue"],"sourcesContent":["import type { Component } from 'vue'\nimport {\n  ElCascader,\n  ElCheckboxGroup,\n  ElColorPicker,\n  ElDatePicker,\n  ElInput,\n  ElInputNumber,\n  ElRadioGroup,\n  ElRate,\n  ElSelect,\n  ElSelectV2,\n  ElSlider,\n  ElSwitch,\n  ElTimePicker,\n  ElTimeSelect,\n  ElTransfer,\n  ElAutocomplete,\n  ElDivider,\n  ElTreeSelect,\n  ElUpload\n} from 'element-plus'\nimport { InputPassword } from '@/components/InputPassword'\nimport { Editor } from '@/components/Editor'\nimport { JsonEditor } from '@/components/JsonEditor'\nimport { IconPicker } from '@/components/IconPicker'\nimport { IAgree } from '@/components/IAgree'\nimport { ComponentName } from '../types'\n\nconst componentMap: Recordable<Component, ComponentName> = {\n  RadioGroup: ElRadioGroup,\n  RadioButton: ElRadioGroup,\n  CheckboxGroup: ElCheckboxGroup,\n  CheckboxButton: ElCheckboxGroup,\n  Input: ElInput,\n  Autocomplete: ElAutocomplete,\n  InputNumber: ElInputNumber,\n  Select: ElSelect,\n  Cascader: ElCascader,\n  Switch: ElSwitch,\n  Slider: ElSlider,\n  TimePicker: ElTimePicker,\n  DatePicker: ElDatePicker,\n  Rate: ElRate,\n  ColorPicker: ElColorPicker,\n  Transfer: ElTransfer,\n  Divider: ElDivider,\n  TimeSelect: ElTimeSelect,\n  SelectV2: ElSelectV2,\n  InputPassword: InputPassword,\n  Editor: Editor,\n  TreeSelect: ElTreeSelect,\n  Upload: ElUpload,\n  JsonEditor: JsonEditor,\n  IconPicker: IconPicker,\n  IAgree: IAgree\n}\n\nexport { componentMap }\n","import {\n  AutocompleteProps,\n  InputNumberProps,\n  CascaderProps,\n  CascaderNode,\n  CascaderValue,\n  SwitchProps,\n  ComponentSize,\n  InputProps,\n  RateProps,\n  ColorPickerProps,\n  TransferProps,\n  RadioGroupProps,\n  RadioButtonProps,\n  CheckboxGroupProps,\n  DividerProps,\n  DatePickerProps,\n  FormItemProps as ElFormItemProps,\n  FormProps as ElFormProps,\n  ISelectProps,\n  UploadProps\n} from 'element-plus'\nimport { IEditorConfig } from '@wangeditor/editor'\nimport { JsonEditorProps } from '@/components/JsonEditor'\nimport { IAgreeProps } from '@/components/IAgree'\nimport { CSSProperties } from 'vue'\n\nexport interface PlaceholderModel {\n  placeholder?: string\n  startPlaceholder?: string\n  endPlaceholder?: string\n  rangeSeparator?: string\n}\n\nexport enum ComponentNameEnum {\n  RADIO_GROUP = 'RadioGroup',\n  RADIO_BUTTON = 'RadioButton',\n  CHECKBOX_GROUP = 'CheckboxGroup',\n  CHECKBOX_BUTTON = 'CheckboxButton',\n  INPUT = 'Input',\n  AUTOCOMPLETE = 'Autocomplete',\n  INPUT_NUMBER = 'InputNumber',\n  SELECT = 'Select',\n  CASCADER = 'Cascader',\n  SWITCH = 'Switch',\n  SLIDER = 'Slider',\n  TIME_PICKER = 'TimePicker',\n  DATE_PICKER = 'DatePicker',\n  RATE = 'Rate',\n  COLOR_PICKER = 'ColorPicker',\n  TRANSFER = 'Transfer',\n  DIVIDER = 'Divider',\n  TIME_SELECT = 'TimeSelect',\n  SELECT_V2 = 'SelectV2',\n  INPUT_PASSWORD = 'InputPassword',\n  EDITOR = 'Editor',\n  TREE_SELECT = 'TreeSelect',\n  UPLOAD = 'Upload',\n  JSON_EDITOR = 'JsonEditor',\n  ICON_PICKER = 'IconPicker',\n  I_AGREE = 'IAgree'\n}\n\ntype CamelCaseComponentName = keyof typeof ComponentNameEnum extends infer K\n  ? K extends string\n    ? K extends `${infer A}_${infer B}`\n      ? `${Capitalize<Lowercase<A>>}${Capitalize<Lowercase<B>>}`\n      : Capitalize<Lowercase<K>>\n    : never\n  : never\n\nexport type ComponentName = CamelCaseComponentName\n\nexport interface InputPasswordComponentProps {\n  strength?: boolean\n  style?: CSSProperties\n}\n\nexport interface InputComponentProps extends Partial<InputProps> {\n  rows?: number\n  on?: {\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n    change?: (value: string | number) => void\n    clear?: () => void\n    input?: (value: string | number) => void\n  }\n  slots?: {\n    prefix?: (...args: any[]) => JSX.Element | null\n    suffix?: (...args: any[]) => JSX.Element | null\n    prepend?: (...args: any[]) => JSX.Element | null\n    append?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface AutocompleteComponentProps extends Partial<AutocompleteProps> {\n  on?: {\n    select?: (item: any) => void\n    change?: (value: string | number) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    prefix?: (...args: any[]) => JSX.Element | null\n    suffix?: (...args: any[]) => JSX.Element | null\n    prepend?: (...args: any[]) => JSX.Element | null\n    append?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface InputNumberComponentProps extends Partial<InputNumberProps> {\n  on?: {\n    change?: (currentValue: number | undefined, oldValue: number | undefined) => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n  }\n  style?: CSSProperties\n}\n\nexport interface SelectOption {\n  label?: string\n  disabled?: boolean\n  value?: any\n  key?: string | number\n  options?: SelectOption[]\n  [key: string]: any\n}\n\nexport interface SelectComponentProps extends Omit<Partial<ISelectProps>, 'options'> {\n  /**\n   * 数据源的字段别名\n   */\n  props?: {\n    key?: string\n    value?: string\n    label?: string\n    children?: string\n  }\n  on?: {\n    change?: (value: string | number | boolean | object) => void\n    visibleChange?: (visible: boolean) => void\n    removeTag?: (tag: any) => void\n    clear?: () => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n  }\n  slots?: {\n    default?: (options: SelectOption[]) => JSX.Element[] | null\n    optionGroupDefault?: (item: SelectOption) => JSX.Element\n    optionDefault?: (option: SelectOption) => JSX.Element | null\n    prefix?: (...args: any[]) => JSX.Element | null\n    empty?: (...args: any[]) => JSX.Element | null\n  }\n  options?: SelectOption[]\n  style?: CSSProperties\n}\n\nexport interface SelectV2ComponentProps {\n  multiple?: boolean\n  disabled?: boolean\n  valueKey?: string\n  size?: ComponentSize\n  clearable?: boolean\n  clearIcon?: string | JSX.Element | null\n  collapseTags?: boolean\n  multipleLimit?: number\n  name?: string\n  effect?: string\n  autocomplete?: string\n  placeholder?: string\n  filterable?: boolean\n  allowCreate?: boolean\n  reserveKeyword?: boolean\n  noDataText?: string\n  popperClass?: string\n  teleported?: boolean\n  persistent?: boolean\n  popperOptions?: any\n  automaticDropdown?: boolean\n  height?: number\n  scrollbarAlwaysOn?: boolean\n  remote?: boolean\n  remoteMethod?: (query: string) => void\n  validateEvent?: boolean\n  placement?: AutocompleteProps['placement']\n  collapseTagsTooltip?: boolean\n  on?: {\n    change?: (value: string | number | boolean | object) => void\n    visibleChange?: (visible: boolean) => void\n    removeTag?: (tag: any) => void\n    clear?: () => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n  }\n  options?: SelectOption[]\n  slots?: {\n    default?: (option: SelectOption) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface CascaderComponentProps {\n  options?: Record<string, unknown>[]\n  props?: CascaderProps\n  size?: ComponentSize\n  placeholder?: string\n  disabled?: boolean\n  clearable?: boolean\n  showAllLevels?: boolean\n  collapseTags?: boolean\n  collapseTagsTooltip?: boolean\n  separator?: string\n  filterable?: boolean\n  filterMethod?: (node: CascaderNode, keyword: string) => boolean\n  debounce?: number\n  beforeFilter?: (value: string) => boolean\n  popperClass?: string\n  teleported?: boolean\n  tagType?: ElementPlusInfoType\n  validateEvent?: boolean\n  on?: {\n    change?: (value: CascaderValue) => void\n    expandChange?: (value: CascaderValue) => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n    visibleChange?: (value: boolean) => void\n    removeTag?: (value: CascaderNode['valueByOption']) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    empty?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface SwitchComponentProps extends Partial<SwitchProps> {\n  on?: {\n    change?: (value: boolean | string | number) => void\n  }\n  style?: CSSProperties\n}\n\nexport interface RateComponentProps extends Partial<RateProps> {\n  on?: {\n    change?: (value: number) => void\n  }\n  style?: CSSProperties\n}\n\nexport interface ColorPickerComponentProps extends Partial<ColorPickerProps> {\n  on?: {\n    change?: (value: string) => void\n    activeChange?: (value: string) => void\n  }\n  style?: CSSProperties\n}\n\nexport interface TransferComponentProps extends Partial<TransferProps> {\n  on?: {\n    change?: (\n      value: number | string,\n      direction: 'left' | 'right',\n      movedKeys: string[] | number[]\n    ) => void\n    leftCheckChange?: (value: any[]) => void\n    rightCheckChange?: (value: any[]) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    leftFooter?: (...args: any[]) => JSX.Element | null\n    rightFooter?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface RadioOption {\n  label?: string\n  value?: string | number | boolean\n  disabled?: boolean\n  border?: boolean\n  size?: ComponentSize\n  name?: string\n  [key: string]: any\n}\nexport interface RadioGroupComponentProps extends Partial<RadioGroupProps> {\n  options?: RadioOption[]\n  /**\n   * 数据源的字段别名\n   */\n  props?: {\n    label?: string\n    value?: string\n    disabled?: string\n  }\n  on?: {\n    change?: (value: string | number | boolean) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element[] | null\n  }\n  style?: CSSProperties\n}\n\nexport interface RadioButtonComponentProps extends Partial<RadioButtonProps> {\n  options?: RadioOption[]\n  /**\n   * 数据源的字段别名\n   */\n  props?: {\n    label?: string\n    value?: string\n    disabled?: string\n  }\n  on?: {\n    change?: (value: string | number | boolean) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element[] | null\n  }\n  style?: CSSProperties\n}\n\nexport interface CheckboxOption {\n  label?: string\n  value?: string | number | boolean\n  disabled?: boolean\n  trueLabel?: string | number\n  falseLabel?: string | number\n  border?: boolean\n  size?: ComponentSize\n  name?: string\n  checked?: boolean\n  indeterminate?: boolean\n  validateEvent?: boolean\n  tabindex?: number | string\n  id?: string\n  controls?: boolean\n  [key: string]: any\n}\n\nexport interface CheckboxGroupComponentProps extends Partial<CheckboxGroupProps> {\n  options?: CheckboxOption[]\n  /**\n   * 数据源的字段别名\n   */\n  props?: {\n    label?: string\n    value?: string\n    disabled?: string\n  }\n  on?: {\n    change?: (value: string | number | boolean) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element[] | null\n  }\n  style?: CSSProperties\n}\n\nexport interface DividerComponentProps extends Partial<DividerProps> {\n  on?: {\n    change?: (value: number) => void\n    input?: (value: number) => void\n  }\n  style?: CSSProperties\n}\n\nexport interface DatePickerComponentProps extends Partial<DatePickerProps> {\n  on?: {\n    change?: (value: string | Date | number | string[]) => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n    calendarChange?: (val: [Date, Date]) => void\n    panelChange?: (date, mode, view) => void\n    visibleChange?: (visibility: boolean) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    rangeSeparator?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface DateTimePickerComponentProps {\n  readonly?: boolean\n  disabled?: boolean\n  editable?: boolean\n  clearable?: boolean\n  size?: ComponentSize\n  placeholder?: string\n  startPlaceholder?: string\n  endPlaceholder?: string\n  timeArrowControl?: boolean\n  type?: 'year' | 'month' | 'date' | 'datetime' | 'datetimerange' | 'daterange' | 'week'\n  format?: string\n  popperClass?: string\n  rangeSeparator?: string\n  defaultValue?: Date | [Date, Date]\n  defaultTime?: Date | [Date, Date]\n  valueFormat?: string\n  id?: string\n  name?: string\n  unlinkPanels?: boolean\n  prefixIcon?: string | JSX.Element\n  clearIcon?: string | JSX.Element\n  shortcuts?: Array<{ text: string; value: Date | Function }>\n  disabledDate?: (date: Date) => boolean\n  cellClassName?: string | ((date: Date) => string | undefined)\n  teleported?: boolean\n  on?: {\n    change?: (value: string | Date | number | string[]) => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n    calendarChange?: (val: [Date, Date]) => void\n    visibleChange?: (visibility: boolean) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    rangeSeparator?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface TimePickerComponentProps {\n  readonly?: boolean\n  disabled?: boolean\n  editable?: boolean\n  clearable?: boolean\n  size?: ComponentSize\n  placeholder?: string\n  startPlaceholder?: string\n  endPlaceholder?: string\n  isRange?: boolean\n  arrowControl?: boolean\n  popperClass?: string\n  rangeSeparator?: string\n  format?: string\n  defaultValue?: Date | [Date, Date]\n  id?: string\n  name?: string\n  label?: string\n  prefixIcon?: string | JSX.Element\n  clearIcon?: string | JSX.Element\n  disabledHours?: (role: string, comparingDate?: any) => number[]\n  disabledMinutes?: (hour: number, role: string, comparingDate?: any) => number[]\n  disabledSeconds?: (hour: number, minute: number, role: string, comparingDate?: any) => number[]\n  teleported?: boolean\n  tabindex?: number | string\n  on?: {\n    change: (\n      val: number | string | Date | [number, number] | [string, string] | [Date, Date]\n    ) => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n    visibleChange?: (visibility: boolean) => void\n  }\n  style?: CSSProperties\n}\n\nexport interface TimeSelectComponentProps {\n  disabled?: boolean\n  editable?: boolean\n  clearable?: boolean\n  size?: ComponentSize\n  placeholder?: string\n  name?: string\n  effect?: string\n  prefixIcon?: string | JSX.Element\n  clearIcon?: string | JSX.Element\n  start?: string\n  end?: string\n  step?: string\n  minTime?: string\n  maxTime?: string\n  format?: string\n  on?: {\n    change?: (val: string) => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n  }\n  style?: CSSProperties\n}\n\nexport interface EditorComponentProps {\n  editorConfig?: IEditorConfig\n  style?: CSSProperties\n}\n\nexport interface ColProps {\n  span?: number\n  xs?: number\n  sm?: number\n  md?: number\n  lg?: number\n  xl?: number\n  tag?: string\n}\n\nexport interface FormSetProps {\n  field: string\n  path: string\n  value: any\n}\n\nexport interface FormItemProps extends Partial<ElFormItemProps> {\n  style?: CSSProperties\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    label?: (...args: any[]) => JSX.Element | null\n    error?: (...args: any[]) => JSX.Element | null\n  }\n}\n\nexport interface UploadComponentProps extends Partial<UploadProps> {\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    trigger?: (...args: any[]) => JSX.Element | null\n    tip?: (...args: any[]) => JSX.Element | null\n    file?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface TreeSelectComponentProps\n  extends Omit<Partial<SelectComponentProps>, 'props' | 'on' | 'slots'> {\n  data?: any[]\n  emptyText?: string\n  nodeKey?: string\n  props?: {\n    children?: string\n    label?: string | ((...args: any[]) => string)\n    disabled?: string | ((...args: any[]) => string)\n    isLeaf?: string | ((...args: any[]) => string)\n    class?: string | ((...args: any[]) => string)\n  }\n  renderAfterExpand?: boolean\n  load?: (...args: any[]) => Promise<any>\n  renderContent?: (...args: any[]) => JSX.Element | null\n  highlightCurrent?: boolean\n  defaultExpandAll?: boolean\n  expandOnClickNode?: boolean\n  checkOnClickNode?: boolean\n  autoExpandParent?: boolean\n  defaultExpandedKeys?: any[]\n  showCheckbox?: boolean\n  checkStrictly?: boolean\n  defaultCheckedKeys?: any[]\n  currentNodeKey?: string | number\n  filterNodeMethod?: (...args: any[]) => boolean\n  accordion?: boolean\n  indent?: number\n  icon?: string | ((...args: any[]) => JSX.Element | null)\n  lazy?: boolean\n  draggable?: boolean\n  allowDrag?: (...args: any[]) => boolean\n  allowDrop?: (...args: any[]) => boolean\n  on?: {\n    change?: (value: string | number | boolean | object) => void\n    visibleChange?: (visible: boolean) => void\n    removeTag?: (tag: any) => void\n    clear?: () => void\n    blur?: (event: FocusEvent) => void\n    focus?: (event: FocusEvent) => void\n    nodeClick?: (...args: any[]) => void\n    nodeContextMenu?: (...args: any[]) => void\n    checkChange?: (...args: any[]) => void\n    check?: (...args: any[]) => void\n    currentChange?: (...args: any[]) => void\n    nodeExpand?: (...args: any[]) => void\n    nodeCollapse?: (...args: any[]) => void\n    nodeDragStart?: (...args: any[]) => void\n    nodeDragEnter?: (...args: any[]) => void\n    nodeDragLeave?: (...args: any[]) => void\n    nodeDragOver?: (...args: any[]) => void\n    nodeDragEnd?: (...args: any[]) => void\n    nodeDrop?: (...args: any[]) => void\n  }\n  slots?: {\n    default?: (...args: any[]) => JSX.Element | null\n    optionGroupDefault?: (item: SelectOption) => JSX.Element\n    optionDefault?: (option: SelectOption) => JSX.Element | null\n    prefix?: (...args: any[]) => JSX.Element | null\n    empty?: (...args: any[]) => JSX.Element | null\n  }\n  style?: CSSProperties\n}\n\nexport interface FormSchema {\n  /**\n   * 唯一标识\n   */\n  field: string\n\n  /**\n   * 标题\n   */\n  label?: string\n\n  /**\n   * col组件属性\n   */\n  colProps?: ColProps\n\n  /**\n   * 表单组件属性，具体可以查看element-plus文档\n   */\n  componentProps?:\n    | InputComponentProps\n    | AutocompleteComponentProps\n    | InputNumberComponentProps\n    | SelectComponentProps\n    | SelectV2ComponentProps\n    | CascaderComponentProps\n    | SwitchComponentProps\n    | RateComponentProps\n    | ColorPickerComponentProps\n    | TransferComponentProps\n    | RadioGroupComponentProps\n    | RadioButtonComponentProps\n    | DividerComponentProps\n    | DatePickerComponentProps\n    | DateTimePickerComponentProps\n    | TimePickerComponentProps\n    | InputPasswordComponentProps\n    | TreeSelectComponentProps\n    | UploadComponentProps\n    | JsonEditorProps\n    | IAgreeProps\n    | any\n\n  /**\n   * formItem组件属性，具体可以查看element-plus文档\n   */\n  formItemProps?: FormItemProps\n\n  /**\n   * 渲染的组件名称\n   */\n  component?: ComponentName\n\n  /**\n   * 初始值\n   */\n  value?: any\n\n  /**\n   * 是否隐藏，如果为true，会连同值一同删除，类似v-if\n   */\n  remove?: boolean\n\n  /**\n   * 样式隐藏，不会把值一同删掉，类似v-show\n   */\n  hidden?: boolean\n\n  /**\n   * @returns 远程加载下拉项\n   */\n  optionApi?: any\n}\n\nexport interface FormProps extends Partial<ElFormProps> {\n  schema?: FormSchema[]\n  isCol?: boolean\n  model?: Recordable\n  autoSetPlaceholder?: boolean\n  isCustom?: boolean\n  [key: string]: any\n}\n","import { useI18n } from '@/hooks/web/useI18n'\nimport { PlaceholderModel, FormSchema, ComponentNameEnum, ColProps } from '../types'\nimport { isFunction } from '@/utils/is'\nimport { firstUpperCase, humpToDash } from '@/utils'\nimport { set, get } from 'lodash-es'\n\nconst { t } = useI18n()\n\n/**\n *\n * @param schema 对应组件数据\n * @returns 返回提示信息对象\n * @description 用于自动设置placeholder\n */\nexport const setTextPlaceholder = (schema: FormSchema): PlaceholderModel => {\n  const textMap = [\n    ComponentNameEnum.INPUT,\n    ComponentNameEnum.AUTOCOMPLETE,\n    ComponentNameEnum.INPUT_NUMBER,\n    ComponentNameEnum.INPUT_PASSWORD\n  ]\n  const selectMap = [\n    ComponentNameEnum.SELECT,\n    ComponentNameEnum.TIME_PICKER,\n    ComponentNameEnum.DATE_PICKER,\n    ComponentNameEnum.TIME_SELECT,\n    ComponentNameEnum.SELECT_V2\n  ]\n  if (textMap.includes(schema?.component as ComponentNameEnum)) {\n    return {\n      placeholder: t('common.inputText')\n    }\n  }\n  if (selectMap.includes(schema?.component as ComponentNameEnum)) {\n    // 一些范围选择器\n    const twoTextMap = ['datetimerange', 'daterange', 'monthrange', 'datetimerange', 'daterange']\n    if (\n      twoTextMap.includes(\n        ((schema?.componentProps as any)?.type ||\n          (schema?.componentProps as any)?.isRange) as string\n      )\n    ) {\n      return {\n        startPlaceholder: t('common.startTimeText'),\n        endPlaceholder: t('common.endTimeText'),\n        rangeSeparator: '-'\n      }\n    } else {\n      return {\n        placeholder: t('common.selectText')\n      }\n    }\n  }\n  return {}\n}\n\n/**\n *\n * @param col 内置栅格\n * @returns 返回栅格属性\n * @description 合并传入进来的栅格属性\n */\nexport const setGridProp = (col: ColProps = {}): ColProps => {\n  const colProps: ColProps = {\n    // 如果有span，代表用户优先级更高，所以不需要默认栅格\n    ...(col.span\n      ? {}\n      : {\n          xs: 24,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          xl: 12\n        }),\n    ...col\n  }\n  return colProps\n}\n\n/**\n *\n * @param item 传入的组件属性\n * @returns 默认添加 clearable 属性\n */\nexport const setComponentProps = (item: FormSchema): Recordable => {\n  // const notNeedClearable = ['ColorPicker']\n  // 拆分事件并组合\n  const onEvents = (item?.componentProps as any)?.on || {}\n  const newOnEvents: Recordable = {}\n\n  for (const key in onEvents) {\n    if (onEvents[key]) {\n      newOnEvents[`on${firstUpperCase(key)}`] = (...args: any[]) => {\n        onEvents[key](...args)\n      }\n    }\n  }\n\n  const componentProps: Recordable = {\n    clearable: true,\n    ...item.componentProps,\n    ...newOnEvents\n  }\n  // 需要删除额外的属性\n  if (componentProps.slots) {\n    delete componentProps.slots\n  }\n  if (componentProps.on) {\n    delete componentProps.on\n  }\n  return componentProps\n}\n\n/**\n *\n * @param formModel 表单数据\n * @param slotsProps 插槽属性\n */\nexport const setItemComponentSlots = (slotsProps: Recordable = {}): Recordable => {\n  const slotObj: Recordable = {}\n  for (const key in slotsProps) {\n    if (slotsProps[key]) {\n      if (isFunction(slotsProps[key])) {\n        slotObj[humpToDash(key)] = (...args: any[]) => {\n          return slotsProps[key]?.(...args)\n        }\n      } else {\n        slotObj[humpToDash(key)] = () => {\n          return slotsProps[key]\n        }\n      }\n    }\n  }\n  return slotObj\n}\n\n/**\n *\n * @param schema Form表单结构化数组\n * @param formModel FormMoel\n * @returns FormMoel\n * @description 生成对应的formModel\n */\nexport const initModel = (schema: FormSchema[], formModel: Recordable) => {\n  const model: Recordable = { ...formModel }\n  schema.map((v) => {\n    if (v.remove) {\n      delete model[v.field]\n    } else if (v.component !== 'Divider') {\n      // const hasField = Reflect.has(model, v.field)\n      const hasField = get(model, v.field)\n      // 如果先前已经有值存在，则不进行重新赋值，而是采用现有的值\n      set(\n        model,\n        v.field,\n        hasField !== void 0 ? get(model, v.field) : v.value !== void 0 ? v.value : undefined\n      )\n      // model[v.field] = hasField ? model[v.field] : v.value !== void 0 ? v.value : undefined\n    }\n  })\n  // 如果 schema 对应的 field 不存在，则删除 model 中的对应的 field\n  for (let i = 0; i < schema.length; i++) {\n    const key = schema[i].field\n    if (!Object.prototype.hasOwnProperty.call(model, key)) {\n      delete model[key]\n    }\n  }\n  return model\n}\n","import { ElOption, ElOptionGroup } from 'element-plus'\nimport { FormSchema, SelectComponentProps, SelectOption } from '../types'\n\nexport const useRenderSelect = () => {\n  // 渲染 select options\n  const renderSelectOptions = (item: FormSchema) => {\n    const componentsProps = item?.componentProps as SelectComponentProps\n    const optionGroupDefaultSlot = componentsProps?.slots?.optionGroupDefault\n    // 如果有别名，就取别名\n    const labelAlias = componentsProps?.props?.label\n    const keyAlias = componentsProps?.props?.key\n    return componentsProps?.options?.map((option) => {\n      if (option?.options?.length) {\n        return optionGroupDefaultSlot ? (\n          optionGroupDefaultSlot(option)\n        ) : (\n          <ElOptionGroup label={option[labelAlias || 'label']} key={option[keyAlias || 'key']}>\n            {{\n              default: () =>\n                option?.options?.map((v) => {\n                  return renderSelectOptionItem(item, v)\n                })\n            }}\n          </ElOptionGroup>\n        )\n      } else {\n        return renderSelectOptionItem(item, option)\n      }\n    })\n  }\n\n  // 渲染 select option item\n  const renderSelectOptionItem = (item: FormSchema, option: SelectOption) => {\n    // 如果有别名，就取别名\n    const componentsProps = item.componentProps as SelectComponentProps\n    const labelAlias = componentsProps?.props?.label\n    const valueAlias = componentsProps?.props?.value\n    const keyAlias = componentsProps?.props?.key\n    const optionDefaultSlot = componentsProps.slots?.optionDefault\n\n    return (\n      <ElOption\n        {...option}\n        key={option[keyAlias || 'key']}\n        label={option[labelAlias || 'label']}\n        value={option[valueAlias || 'value']}\n      >\n        {{\n          default: () => (optionDefaultSlot ? optionDefaultSlot(option) : undefined)\n        }}\n      </ElOption>\n    )\n  }\n\n  return {\n    renderSelectOptions\n  }\n}\n","import { FormSchema, ComponentNameEnum, RadioGroupComponentProps } from '../types'\nimport { ElRadio, ElRadioButton } from 'element-plus'\nimport { defineComponent } from 'vue'\n\nexport const useRenderRadio = () => {\n  const renderRadioOptions = (item: FormSchema) => {\n    // 如果有别名，就取别名\n    const componentProps = item?.componentProps as RadioGroupComponentProps\n    const valueAlias = componentProps?.props?.value || 'value'\n    const labelAlias = componentProps?.props?.label || 'label'\n    const disabledAlias = componentProps?.props?.disabled || 'disabled'\n    const Com = (\n      item.component === ComponentNameEnum.RADIO_GROUP ? ElRadio : ElRadioButton\n    ) as ReturnType<typeof defineComponent>\n    return componentProps?.options?.map((option) => {\n      const { ...other } = option\n      return (\n        <Com\n          {...other}\n          disabled={option[disabledAlias || 'disabled']}\n          label={option[labelAlias || 'label']}\n          value={option[valueAlias || 'value']}\n        ></Com>\n      )\n    })\n  }\n\n  return {\n    renderRadioOptions\n  }\n}\n","import { FormSchema, ComponentNameEnum, CheckboxGroupComponentProps } from '../types'\nimport { ElCheckbox, ElCheckboxButton } from 'element-plus'\nimport { defineComponent } from 'vue'\n\nexport const useRenderCheckbox = () => {\n  const renderCheckboxOptions = (item: FormSchema) => {\n    // 如果有别名，就取别名\n    const componentProps = item?.componentProps as CheckboxGroupComponentProps\n    const valueAlias = componentProps?.props?.value || 'value'\n    const labelAlias = componentProps?.props?.label || 'label'\n    const disabledAlias = componentProps?.props?.disabled || 'disabled'\n    const Com = (\n      item.component === ComponentNameEnum.CHECKBOX_GROUP ? ElCheckbox : ElCheckboxButton\n    ) as ReturnType<typeof defineComponent>\n    return componentProps?.options?.map((option) => {\n      const { ...other } = option\n      return (\n        <Com\n          {...other}\n          disabled={option[disabledAlias || 'disabled']}\n          label={option[labelAlias || 'label']}\n          value={option[valueAlias || 'value']}\n        ></Com>\n      )\n    })\n  }\n\n  return {\n    renderCheckboxOptions\n  }\n}\n","<script lang=\"tsx\">\nimport { PropType, defineComponent, ref, computed, unref, watch, onMounted } from 'vue'\nimport {\n  ElForm,\n  ElFormItem,\n  ElRow,\n  ElCol,\n  FormRules,\n  ComponentSize\n  // FormItemProp\n} from 'element-plus'\nimport { componentMap } from './helper/componentMap'\nimport { propTypes } from '@/utils/propTypes'\nimport { getSlot } from '@/utils/tsxHelper'\nimport {\n  setTextPlaceholder,\n  setGridProp,\n  setComponentProps,\n  setItemComponentSlots,\n  initModel\n} from './helper'\nimport { useRenderSelect } from './components/useRenderSelect'\nimport { useRenderRadio } from './components/useRenderRadio'\nimport { useRenderCheckbox } from './components/useRenderCheckbox'\nimport { useDesign } from '@/hooks/web/useDesign'\nimport { findIndex } from '@/utils'\nimport { get, set } from 'lodash-es'\nimport { FormProps } from './types'\nimport {\n  FormSchema,\n  FormSetProps,\n  ComponentNameEnum,\n  SelectComponentProps,\n  RadioGroupComponentProps,\n  CheckboxGroupComponentProps\n} from './types'\n\nconst { renderSelectOptions } = useRenderSelect()\nconst { renderRadioOptions } = useRenderRadio()\nconst { renderCheckboxOptions } = useRenderCheckbox()\n\nconst { getPrefixCls } = useDesign()\n\nconst prefixCls = getPrefixCls('form')\n\nexport default defineComponent({\n  name: 'Form',\n  props: {\n    // 生成Form的布局结构数组\n    schema: {\n      type: Array as PropType<FormSchema[]>,\n      default: () => []\n    },\n    // 是否需要栅格布局\n    isCol: propTypes.bool.def(true),\n    // 表单数据对象\n    model: {\n      type: Object as PropType<any>,\n      default: () => ({})\n    },\n    // 是否自动设置placeholder\n    autoSetPlaceholder: propTypes.bool.def(true),\n    // 是否自定义内容\n    isCustom: propTypes.bool.def(false),\n    // 表单label宽度\n    labelWidth: propTypes.oneOfType([String, Number]).def('auto'),\n    rules: {\n      type: Object as PropType<FormRules>,\n      default: () => ({})\n    },\n    labelPosition: propTypes.oneOf(['left', 'right', 'top']).def('right'),\n    labelSuffix: propTypes.string.def(''),\n    hideRequiredAsterisk: propTypes.bool.def(false),\n    requireAsteriskPosition: propTypes.oneOf(['left', 'right']).def('left'),\n    showMessage: propTypes.bool.def(true),\n    inlineMessage: propTypes.bool.def(false),\n    statusIcon: propTypes.bool.def(false),\n    validateOnRuleChange: propTypes.bool.def(true),\n    size: {\n      type: String as PropType<ComponentSize>,\n      default: undefined\n    },\n    disabled: propTypes.bool.def(false),\n    scrollToError: propTypes.bool.def(false),\n    scrollToErrorOffset: propTypes.oneOfType([Boolean, Object]).def(undefined)\n    // onValidate: {\n    //   type: Function as PropType<(prop: FormItemProp, isValid: boolean, message: string) => void>,\n    //   default: () => {}\n    // }\n  },\n  emits: ['register'],\n  setup(props, { slots, expose, emit }) {\n    // element form 实例\n    const elFormRef = ref<ComponentRef<typeof ElForm>>()\n\n    const mergeProps = ref<FormProps>({})\n\n    const getProps = computed(() => {\n      const propsObj = { ...props }\n      Object.assign(propsObj, unref(mergeProps))\n      return propsObj\n    })\n\n    // 存储表单实例\n    const formComponents = ref({})\n\n    // 存储form-item实例\n    const formItemComponents = ref({})\n\n    // 表单数据\n    const formModel = ref<Recordable>(props.model)\n\n    onMounted(() => {\n      emit('register', unref(elFormRef)?.$parent, unref(elFormRef))\n    })\n\n    // 对表单赋值\n    const setValues = (data: Recordable = {}) => {\n      formModel.value = Object.assign(unref(formModel), data)\n    }\n\n    const setProps = (props: FormProps = {}) => {\n      mergeProps.value = Object.assign(unref(mergeProps), props)\n    }\n\n    const delSchema = (field: string) => {\n      const { schema } = unref(getProps)\n\n      const index = findIndex(schema, (v: FormSchema) => v.field === field)\n      if (index > -1) {\n        schema.splice(index, 1)\n      }\n    }\n\n    const addSchema = (formSchema: FormSchema, index?: number) => {\n      const { schema } = unref(getProps)\n      if (index !== void 0) {\n        schema.splice(index, 0, formSchema)\n        return\n      }\n      schema.push(formSchema)\n    }\n\n    const setSchema = (schemaProps: FormSetProps[]) => {\n      const { schema } = unref(getProps)\n      for (const v of schema) {\n        for (const item of schemaProps) {\n          if (v.field === item.field) {\n            set(v, item.path, item.value)\n          }\n        }\n      }\n    }\n\n    const getOptions = async (fn: Function, item: FormSchema) => {\n      const options = await fn()\n      if (!options || options.length == 0) return\n      setSchema([\n        {\n          field: item.field,\n          path:\n            item.component === ComponentNameEnum.TREE_SELECT ||\n            item.component === ComponentNameEnum.TRANSFER\n              ? 'componentProps.data'\n              : 'componentProps.options',\n          value: options\n        }\n      ])\n    }\n\n    /**\n     * @description: 获取表单组件实例\n     * @param filed 表单字段\n     */\n    const getComponentExpose = (filed: string) => {\n      return unref(formComponents)[filed]\n    }\n\n    /**\n     * @description: 获取formItem实例\n     * @param filed 表单字段\n     */\n    const getFormItemExpose = (filed: string) => {\n      return unref(formItemComponents)[filed]\n    }\n\n    const setComponentRefMap = (ref: any, filed: string) => {\n      formComponents.value[filed] = ref\n    }\n\n    const setFormItemRefMap = (ref: any, filed: string) => {\n      formItemComponents.value[filed] = ref\n    }\n\n    expose({\n      setValues,\n      formModel,\n      setProps,\n      delSchema,\n      addSchema,\n      setSchema,\n      getComponentExpose,\n      getFormItemExpose\n    })\n\n    // 监听表单结构化数组，重新生成formModel\n    watch(\n      () => unref(getProps).schema,\n      (schema = []) => {\n        formModel.value = initModel(schema, unref(formModel))\n      },\n      {\n        immediate: true,\n        deep: true\n      }\n    )\n\n    // 渲染包裹标签，是否使用栅格布局\n    const renderWrap = () => {\n      const { isCol } = unref(getProps)\n      const content = isCol ? (\n        <ElRow gutter={20}>{renderFormItemWrap()}</ElRow>\n      ) : (\n        renderFormItemWrap()\n      )\n      return content\n    }\n\n    // 是否要渲染el-col\n    const renderFormItemWrap = () => {\n      // hidden属性表示隐藏，不做渲染\n      const { schema = [], isCol } = unref(getProps)\n\n      return schema\n        .filter((v) => !v.remove)\n        .map((item) => {\n          // 如果是 Divider 组件，需要自己占用一行\n          const isDivider = item.component === 'Divider'\n          const Com = componentMap['Divider'] as ReturnType<typeof defineComponent>\n          return isDivider ? (\n            <Com {...{ contentPosition: 'left', ...item.componentProps }}>{item?.label}</Com>\n          ) : isCol ? (\n            // 如果需要栅格，需要包裹 ElCol\n            <ElCol {...setGridProp(item.colProps)}>{renderFormItem(item)}</ElCol>\n          ) : (\n            renderFormItem(item)\n          )\n        })\n    }\n\n    // 渲染formItem\n    const renderFormItem = (item: FormSchema) => {\n      // 如果有optionApi，优先使用optionApi, 并且options不存在或者为空数组\n      if (\n        item.optionApi &&\n        (!item.componentProps?.options || !item.componentProps?.options.length)\n      ) {\n        // 内部自动调用接口，不影响其它渲染\n        getOptions(item.optionApi, item)\n      }\n      const formItemSlots: Recordable = {\n        default: () => {\n          if (item?.formItemProps?.slots?.default) {\n            return item?.formItemProps?.slots?.default(formModel.value)\n          } else {\n            const Com = componentMap[item.component as string] as ReturnType<typeof defineComponent>\n\n            const { autoSetPlaceholder } = unref(getProps)\n\n            const componentSlots = (item?.componentProps as any)?.slots || {}\n            const slotsMap: Recordable = {\n              ...setItemComponentSlots(componentSlots)\n            }\n            // // 如果是select组件，并且没有自定义模板，自动渲染options\n            if (item.component === ComponentNameEnum.SELECT) {\n              slotsMap.default = !componentSlots.default\n                ? () => renderSelectOptions(item)\n                : () => {\n                    return componentSlots.default(\n                      unref((item?.componentProps as SelectComponentProps)?.options)\n                    )\n                  }\n            }\n\n            // 虚拟列表\n            if (item.component === ComponentNameEnum.SELECT_V2 && componentSlots.default) {\n              slotsMap.default = ({ item }) => {\n                return componentSlots.default(item)\n              }\n            }\n\n            // 单选框组和按钮样式\n            if (\n              item.component === ComponentNameEnum.RADIO_GROUP ||\n              item.component === ComponentNameEnum.RADIO_BUTTON\n            ) {\n              slotsMap.default = !componentSlots.default\n                ? () => renderRadioOptions(item)\n                : () => {\n                    return componentSlots.default(\n                      unref((item?.componentProps as CheckboxGroupComponentProps)?.options)\n                    )\n                  }\n            }\n\n            // 多选框组和按钮样式\n            if (\n              item.component === ComponentNameEnum.CHECKBOX_GROUP ||\n              item.component === ComponentNameEnum.CHECKBOX_BUTTON\n            ) {\n              slotsMap.default = !componentSlots.default\n                ? () => renderCheckboxOptions(item)\n                : () => {\n                    return componentSlots.default(\n                      unref((item?.componentProps as RadioGroupComponentProps)?.options)\n                    )\n                  }\n            }\n\n            const Comp = () => {\n              // 如果field是多层路径，需要转换成对象\n              const itemVal = computed({\n                get: () => {\n                  return get(formModel.value, item.field)\n                },\n                set: (val) => {\n                  set(formModel.value, item.field, val)\n                }\n              })\n\n              return item.component === ComponentNameEnum.UPLOAD ? (\n                <Com\n                  vModel:file-list={itemVal.value}\n                  ref={(el: any) => setComponentRefMap(el, item.field)}\n                  {...(autoSetPlaceholder && setTextPlaceholder(item))}\n                  {...setComponentProps(item)}\n                  style={\n                    item.componentProps?.style || {\n                      width: '100%'\n                    }\n                  }\n                >\n                  {{ ...slotsMap }}\n                </Com>\n              ) : (\n                <Com\n                  vModel={itemVal.value}\n                  ref={(el: any) => setComponentRefMap(el, item.field)}\n                  {...(autoSetPlaceholder && setTextPlaceholder(item))}\n                  {...setComponentProps(item)}\n                  style={\n                    item.componentProps?.style || {\n                      width: '100%'\n                    }\n                  }\n                >\n                  {{ ...slotsMap }}\n                </Com>\n              )\n            }\n\n            return <>{Comp()}</>\n          }\n        }\n      }\n      if (item?.formItemProps?.slots?.label) {\n        formItemSlots.label = (...args: any[]) => {\n          return (item?.formItemProps?.slots as any)?.label(...args)\n        }\n      }\n      if (item?.formItemProps?.slots?.error) {\n        formItemSlots.error = (...args: any[]) => {\n          return (item?.formItemProps?.slots as any)?.error(...args)\n        }\n      }\n      return (\n        <ElFormItem\n          v-show={!item.hidden}\n          ref={(el: any) => setFormItemRefMap(el, item.field)}\n          {...(item.formItemProps || {})}\n          prop={item.field}\n          label={item.label || ''}\n        >\n          {formItemSlots}\n        </ElFormItem>\n      )\n    }\n\n    // 过滤传入Form组件的属性\n    const getFormBindValue = () => {\n      // 避免在标签上出现多余的属性\n      const delKeys = ['schema', 'isCol', 'autoSetPlaceholder', 'isCustom', 'model']\n      const props = { ...unref(getProps) }\n      for (const key in props) {\n        if (delKeys.indexOf(key) !== -1) {\n          delete props[key]\n        }\n      }\n      return props as FormProps\n    }\n\n    return () => (\n      <ElForm\n        ref={elFormRef}\n        {...getFormBindValue()}\n        model={unref(getProps).isCustom ? unref(getProps).model : formModel}\n        class={prefixCls}\n        // @ts-ignore\n        onSubmit={(e: Event) => {\n          e.preventDefault()\n        }}\n      >\n        {{\n          // 如果需要自定义，就什么都不渲染，而是提供默认插槽\n          default: () => {\n            const { isCustom } = unref(getProps)\n            return isCustom ? getSlot(slots, 'default') : renderWrap()\n          }\n        }}\n      </ElForm>\n    )\n  }\n})\n</script>\n\n<style lang=\"less\" scoped>\n.@{elNamespace}-form.@{adminNamespace}-form .@{elNamespace}-row {\n  margin-right: 0 !important;\n  margin-left: 0 !important;\n}\n\n.@{elNamespace}-form--inline {\n  :deep(.el-form-item__content) {\n    & > :first-child {\n      min-width: 229.5px;\n    }\n  }\n  .@{elNamespace}-input-number {\n    // 229.5px是兼容el-input-number的最小宽度,\n    min-width: 229.5px;\n  }\n}\n</style>\n"],"names":["componentMap","ElRadioGroup","ElCheckboxGroup","ElInput","ElAutocomplete","ElInputNumber","ElSelect","ElCascader","ElSwitch","ElSlider","ElTimePicker","ElDatePicker","ElRate","ElColorPicker","ElTransfer","ElDivider","ElTimeSelect","ElSelectV2","InputPassword","Editor","ElTreeSelect","ElUpload","JsonEditor","IconPicker","IAgree","ComponentNameEnum","t","useI18n","setTextPlaceholder","schema","textMap","selectMap","_a","_b","setGridProp","col","__spreadValues","setComponentProps","item","onEvents","newOnEvents","key","firstUpperCase","args","componentProps","setItemComponentSlots","slotsProps","slotObj","isFunction","humpToDash","initModel","formModel","model","v","hasField","get","set","i","useRenderSelect","renderSelectOptions","componentsProps","optionGroupDefaultSlot","slots","optionGroupDefault","labelAlias","props","label","keyAlias","options","map","option","length","_createVNode","ElOptionGroup","default","renderSelectOptionItem","valueAlias","value","optionDefaultSlot","optionDefault","ElOption","_mergeProps","undefined","useRenderRadio","renderRadioOptions","disabledAlias","disabled","Com","component","RADIO_GROUP","ElRadio","ElRadioButton","other","useRenderCheckbox","renderCheckboxOptions","CHECKBOX_GROUP","ElCheckbox","ElCheckboxButton","_isSlot","s","Object","prototype","toString","call","_isVNode","getPrefixCls","useDesign","prefixCls","defineComponent","name","type","Array","isCol","propTypes","bool","def","autoSetPlaceholder","isCustom","labelWidth","oneOfType","String","Number","rules","labelPosition","oneOf","labelSuffix","string","hideRequiredAsterisk","requireAsteriskPosition","showMessage","inlineMessage","statusIcon","validateOnRuleChange","size","scrollToError","scrollToErrorOffset","Boolean","emits","setup","expose","emit","elFormRef","ref","mergeProps","getProps","computed","propsObj","assign","unref","formComponents","formItemComponents","onMounted","$parent","setValues","data","setProps","delSchema","field","index","findIndex","splice","addSchema","formSchema","push","setSchema","schemaProps","path","getOptions","fn","__async","TREE_SELECT","TRANSFER","getComponentExpose","filed","getFormItemExpose","setComponentRefMap","setFormItemRefMap","watch","immediate","deep","renderWrap","_slot","renderFormItemWrap","filter","remove","_slot2","isDivider","contentPosition","ElCol","colProps","renderFormItem","optionApi","formItemSlots","formItemProps","componentSlots","slotsMap","SELECT","SELECT_V2","RADIO_BUTTON","CHECKBOX_BUTTON","_Fragment","Comp","itemVal","val","UPLOAD","$event","el","style","width","error","_withDirectives","ElFormItem","_vShow","hidden","getFormBindValue","delKeys","indexOf","ElForm","e","preventDefault","getSlot"],"mappings":"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"}