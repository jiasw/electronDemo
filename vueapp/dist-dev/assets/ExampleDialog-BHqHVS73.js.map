{"version":3,"file":"ExampleDialog-BHqHVS73.js","sources":["../../src/views/Example/Dialog/ExampleDialog.vue"],"sourcesContent":["<script setup lang=\"tsx\">\nimport { ContentWrap } from '@/components/ContentWrap'\nimport { Search } from '@/components/Search'\nimport { Dialog } from '@/components/Dialog'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { ElTag } from 'element-plus'\nimport { Table } from '@/components/Table'\nimport { getTableListApi, saveTableApi, delTableListApi } from '@/api/table'\nimport { useTable } from '@/hooks/web/useTable'\nimport { TableData } from '@/api/table/types'\nimport { ref, unref, reactive } from 'vue'\nimport Write from './components/Write.vue'\nimport Detail from './components/Detail.vue'\nimport { CrudSchema, useCrudSchemas } from '@/hooks/web/useCrudSchemas'\nimport { BaseButton } from '@/components/Button'\n\nconst ids = ref<string[]>([])\n\nconst { tableRegister, tableState, tableMethods } = useTable({\n  fetchDataApi: async () => {\n    const { currentPage, pageSize } = tableState\n    const res = await getTableListApi({\n      pageIndex: unref(currentPage),\n      pageSize: unref(pageSize),\n      ...unref(searchParams)\n    })\n    return {\n      list: res.data.list,\n      total: res.data.total\n    }\n  },\n  fetchDelApi: async () => {\n    const res = await delTableListApi(unref(ids))\n    return !!res\n  }\n})\nconst { loading, dataList, total, currentPage, pageSize } = tableState\nconst { getList, getElTableExpose, delList } = tableMethods\n\nconst searchParams = ref({})\nconst setSearchParams = (params: any) => {\n  searchParams.value = params\n  getList()\n}\n\nconst { t } = useI18n()\n\nconst crudSchemas = reactive<CrudSchema[]>([\n  {\n    field: 'selection',\n    search: {\n      hidden: true\n    },\n    form: {\n      hidden: true\n    },\n    detail: {\n      hidden: true\n    },\n    table: {\n      type: 'selection'\n    }\n  },\n  {\n    field: 'index',\n    label: t('tableDemo.index'),\n    type: 'index',\n    search: {\n      hidden: true\n    },\n    form: {\n      hidden: true\n    },\n    detail: {\n      hidden: true\n    }\n  },\n  {\n    field: 'title',\n    label: t('tableDemo.title'),\n    search: {\n      component: 'Input'\n    },\n    form: {\n      component: 'Input',\n      colProps: {\n        span: 24\n      }\n    },\n    detail: {\n      span: 24\n    }\n  },\n  {\n    field: 'author',\n    label: t('tableDemo.author'),\n    search: {\n      hidden: true\n    }\n  },\n  {\n    field: 'display_time',\n    label: t('tableDemo.displayTime'),\n    search: {\n      hidden: true\n    },\n    form: {\n      component: 'DatePicker',\n      componentProps: {\n        type: 'datetime',\n        valueFormat: 'YYYY-MM-DD HH:mm:ss'\n      }\n    }\n  },\n  {\n    field: 'importance',\n    label: t('tableDemo.importance'),\n    search: {\n      hidden: true\n    },\n    form: {\n      component: 'Select',\n      componentProps: {\n        style: {\n          width: '100%'\n        },\n        options: [\n          {\n            label: '重要',\n            value: 3\n          },\n          {\n            label: '良好',\n            value: 2\n          },\n          {\n            label: '一般',\n            value: 1\n          }\n        ]\n      }\n    },\n    detail: {\n      slots: {\n        default: (data: any) => {\n          return (\n            <ElTag\n              type={\n                data.importance === 1 ? 'success' : data.importance === 2 ? 'warning' : 'danger'\n              }\n            >\n              {data.importance === 1\n                ? t('tableDemo.important')\n                : data.importance === 2\n                  ? t('tableDemo.good')\n                  : t('tableDemo.commonly')}\n            </ElTag>\n          )\n        }\n      }\n    }\n  },\n  {\n    field: 'pageviews',\n    label: t('tableDemo.pageviews'),\n    search: {\n      hidden: true\n    },\n    form: {\n      component: 'InputNumber',\n      value: 0\n    }\n  },\n  {\n    field: 'content',\n    label: t('exampleDemo.content'),\n    search: {\n      hidden: true\n    },\n    table: {\n      show: false\n    },\n    form: {\n      component: 'Editor',\n      colProps: {\n        span: 24\n      }\n    },\n    detail: {\n      span: 24,\n      slots: {\n        default: (data: any) => {\n          return <div innerHTML={data.content}></div>\n        }\n      }\n    }\n  },\n  {\n    field: 'action',\n    width: '260px',\n    label: t('tableDemo.action'),\n    search: {\n      hidden: true\n    },\n    form: {\n      hidden: true\n    },\n    detail: {\n      hidden: true\n    },\n    table: {\n      slots: {\n        default: (data: any) => {\n          return (\n            <>\n              <BaseButton type=\"primary\" onClick={() => action(data.row, 'edit')}>\n                {t('exampleDemo.edit')}\n              </BaseButton>\n              <BaseButton type=\"success\" onClick={() => action(data.row, 'detail')}>\n                {t('exampleDemo.detail')}\n              </BaseButton>\n              <BaseButton type=\"danger\" onClick={() => delData(data.row)}>\n                {t('exampleDemo.del')}\n              </BaseButton>\n            </>\n          )\n        }\n      }\n    }\n  }\n])\n\n// @ts-ignore\nconst { allSchemas } = useCrudSchemas(crudSchemas)\n\nconst dialogVisible = ref(false)\nconst dialogTitle = ref('')\n\nconst currentRow = ref<TableData | null>(null)\nconst actionType = ref('')\n\nconst AddAction = () => {\n  dialogTitle.value = t('exampleDemo.add')\n  currentRow.value = null\n  dialogVisible.value = true\n  actionType.value = ''\n}\n\nconst delLoading = ref(false)\n\nconst delData = async (row: TableData | null) => {\n  const elTableExpose = await getElTableExpose()\n  ids.value = row ? [row.id] : elTableExpose?.getSelectionRows().map((v: TableData) => v.id) || []\n  delLoading.value = true\n  await delList(unref(ids).length).finally(() => {\n    delLoading.value = false\n  })\n}\n\nconst action = (row: TableData, type: string) => {\n  dialogTitle.value = t(type === 'edit' ? 'exampleDemo.edit' : 'exampleDemo.detail')\n  actionType.value = type\n  currentRow.value = row\n  dialogVisible.value = true\n}\n\nconst writeRef = ref<ComponentRef<typeof Write>>()\n\nconst saveLoading = ref(false)\n\nconst save = async () => {\n  const write = unref(writeRef)\n  const formData = await write?.submit()\n  if (formData) {\n    saveLoading.value = true\n    const res = await saveTableApi(formData)\n      .catch(() => {})\n      .finally(() => {\n        saveLoading.value = false\n      })\n    if (res) {\n      dialogVisible.value = false\n      currentPage.value = 1\n      getList()\n    }\n  }\n}\n</script>\n\n<template>\n  <ContentWrap>\n    <Search :schema=\"allSchemas.searchSchema\" @search=\"setSearchParams\" @reset=\"setSearchParams\" />\n\n    <div class=\"mb-10px\">\n      <BaseButton type=\"primary\" @click=\"AddAction\">{{ t('exampleDemo.add') }}</BaseButton>\n      <BaseButton :loading=\"delLoading\" type=\"danger\" @click=\"delData(null)\">\n        {{ t('exampleDemo.del') }}\n      </BaseButton>\n    </div>\n\n    <Table\n      v-model:pageSize=\"pageSize\"\n      v-model:currentPage=\"currentPage\"\n      :columns=\"allSchemas.tableColumns\"\n      :data=\"dataList\"\n      :loading=\"loading\"\n      :pagination=\"{\n        total: total\n      }\"\n      @register=\"tableRegister\"\n    />\n  </ContentWrap>\n\n  <Dialog v-model=\"dialogVisible\" :title=\"dialogTitle\">\n    <Write\n      v-if=\"actionType !== 'detail'\"\n      ref=\"writeRef\"\n      :form-schema=\"allSchemas.formSchema\"\n      :current-row=\"currentRow\"\n    />\n\n    <Detail\n      v-if=\"actionType === 'detail'\"\n      :detail-schema=\"allSchemas.detailSchema\"\n      :current-row=\"currentRow\"\n    />\n\n    <template #footer>\n      <BaseButton\n        v-if=\"actionType !== 'detail'\"\n        type=\"primary\"\n        :loading=\"saveLoading\"\n        @click=\"save\"\n      >\n        {{ t('exampleDemo.save') }}\n      </BaseButton>\n      <BaseButton @click=\"dialogVisible = false\">{{ t('dialogDemo.close') }}</BaseButton>\n    </template>\n  </Dialog>\n</template>\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","ids","ref","tableRegister","tableState","tableMethods","useTable","fetchDataApi","__async","currentPage","pageSize","res","getTableListApi","__spreadValues","pageIndex","unref","searchParams","list","data","total","fetchDelApi","delTableListApi","loading","dataList","getList","getElTableExpose","delList","setSearchParams","params","value","t","useI18n","crudSchemas","reactive","field","search","hidden","form","detail","table","type","label","component","colProps","span","componentProps","valueFormat","style","width","options","slots","default","_createVNode2","ElTag","importance","show","content","_slot","_slot2","_slot3","_Fragment2","BaseButton","onClick","action","row","delData","allSchemas","useCrudSchemas","dialogVisible","dialogTitle","currentRow","actionType","AddAction","delLoading","elTableExpose","id","getSelectionRows","map","v","length","finally","writeRef","saveLoading","save","write","formData","submit","saveTableApi","catch"],"mappings":"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"}