{"version":3,"file":"useTable-NHyZ6HJ1.js","sources":["../../src/hooks/web/useTable.ts"],"sourcesContent":["import { useI18n } from '@/hooks/web/useI18n'\nimport { Table, TableExpose, TableProps, TableSetProps, TableColumn } from '@/components/Table'\nimport { ElTable, ElMessageBox, ElMessage } from 'element-plus'\nimport { ref, watch, unref, nextTick, onMounted } from 'vue'\n\nconst { t } = useI18n()\n\ninterface UseTableConfig {\n  /**\n   * 是否初始化的时候请求一次\n   */\n  immediate?: boolean\n  fetchDataApi: () => Promise<{\n    list: any[]\n    total?: number\n  }>\n  fetchDelApi?: () => Promise<boolean>\n}\n\nexport const useTable = (config: UseTableConfig) => {\n  const { immediate = true } = config\n\n  const loading = ref(false)\n  const currentPage = ref(1)\n  const pageSize = ref(10)\n  const total = ref(0)\n  const dataList = ref<any[]>([])\n  let isPageSizeChange = false\n\n  watch(\n    () => currentPage.value,\n    () => {\n      if (!isPageSizeChange) methods.getList()\n      isPageSizeChange = false\n    }\n  )\n\n  watch(\n    () => pageSize.value,\n    () => {\n      if (unref(currentPage) === 1) {\n        methods.getList()\n      } else {\n        currentPage.value = 1\n        isPageSizeChange = true\n        methods.getList()\n      }\n    }\n  )\n\n  onMounted(() => {\n    if (immediate) {\n      methods.getList()\n    }\n  })\n\n  // Table实例\n  const tableRef = ref<typeof Table & TableExpose>()\n\n  // ElTable实例\n  const elTableRef = ref<ComponentRef<typeof ElTable>>()\n\n  const register = (ref: typeof Table & TableExpose, elRef: ComponentRef<typeof ElTable>) => {\n    tableRef.value = ref\n    elTableRef.value = unref(elRef)\n  }\n\n  const getTable = async () => {\n    await nextTick()\n    const table = unref(tableRef)\n    if (!table) {\n      console.error('The table is not registered. Please use the register method to register')\n    }\n    return table\n  }\n\n  const methods = {\n    /**\n     * 获取表单数据\n     */\n    getList: async () => {\n      loading.value = true\n      try {\n        const res = await config?.fetchDataApi()\n        console.log('fetchDataApi res', res)\n        if (res) {\n          dataList.value = res.list\n          total.value = res.total || 0\n        }\n      } catch (err) {\n        console.log('fetchDataApi error')\n      } finally {\n        loading.value = false\n      }\n    },\n\n    /**\n     * @description 设置table组件的props\n     * @param props table组件的props\n     */\n    setProps: async (props: TableProps = {}) => {\n      const table = await getTable()\n      table?.setProps(props)\n    },\n\n    /**\n     * @description 设置column\n     * @param columnProps 需要设置的列\n     */\n    setColumn: async (columnProps: TableSetProps[]) => {\n      const table = await getTable()\n      table?.setColumn(columnProps)\n    },\n\n    /**\n     * @description 新增column\n     * @param tableColumn 需要新增数据\n     * @param index 在哪里新增\n     */\n    addColumn: async (tableColumn: TableColumn, index?: number) => {\n      const table = await getTable()\n      table?.addColumn(tableColumn, index)\n    },\n\n    /**\n     * @description 删除column\n     * @param field 删除哪个数据\n     */\n    delColumn: async (field: string) => {\n      const table = await getTable()\n      table?.delColumn(field)\n    },\n\n    /**\n     * @description 获取ElTable组件的实例\n     * @returns ElTable instance\n     */\n    getElTableExpose: async () => {\n      await getTable()\n      return unref(elTableRef)\n    },\n\n    refresh: () => {\n      methods.getList()\n    },\n\n    // sortableChange: (e: any) => {\n    //   console.log('sortableChange', e)\n    //   const { oldIndex, newIndex } = e\n    //   dataList.value.splice(newIndex, 0, dataList.value.splice(oldIndex, 1)[0])\n    //   // to do something\n    // }\n    // 删除数据\n    delList: async (idsLength: number) => {\n      const { fetchDelApi } = config\n      if (!fetchDelApi) {\n        console.warn('fetchDelApi is undefined')\n        return\n      }\n      ElMessageBox.confirm(t('common.delMessage'), t('common.delWarning'), {\n        confirmButtonText: t('common.delOk'),\n        cancelButtonText: t('common.delCancel'),\n        type: 'warning'\n      }).then(async () => {\n        const res = await fetchDelApi()\n        if (res) {\n          ElMessage.success(t('common.delSuccess'))\n\n          // 计算出临界点\n          const current =\n            unref(total) % unref(pageSize) === idsLength || unref(pageSize) === 1\n              ? unref(currentPage) > 1\n                ? unref(currentPage) - 1\n                : unref(currentPage)\n              : unref(currentPage)\n\n          currentPage.value = current\n          methods.getList()\n        }\n      })\n    }\n  }\n\n  return {\n    tableRegister: register,\n    tableMethods: methods,\n    tableState: {\n      currentPage,\n      pageSize,\n      total,\n      dataList,\n      loading\n    }\n  }\n}\n"],"names":["t","useI18n","useTable","config","immediate","loading","ref","currentPage","pageSize","total","dataList","isPageSizeChange","watch","methods","unref","onMounted","tableRef","elTableRef","register","elRef","getTable","__async","nextTick","table","res","err","_0","props","columnProps","tableColumn","index","field","idsLength","fetchDelApi","ElMessageBox","ElMessage","current"],"mappings":"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"}