{"version":3,"file":"Dialog-CuLvWscC.js","sources":["../../src/components/Dialog/hooks/useResize.ts","../../src/components/Dialog/src/ResizeDialog.vue","../../src/views/Components/Dialog.vue"],"sourcesContent":["import { ref } from 'vue'\n\nexport const useResize = (props?: {\n  minHeightPx?: number\n  minWidthPx?: number\n  initHeight?: number\n  initWidth?: number\n}) => {\n  const {\n    minHeightPx = 400,\n    minWidthPx = window.innerWidth / 2,\n    initHeight = 400,\n    initWidth = window.innerWidth / 2\n  } = props || {}\n  // 屏幕宽度的 50% 作为最小宽度\n  //   const minWidthPx = window.innerWidth / 2\n  // 固定的最小高度 400px\n  //   const minHeightPx = 400\n  // 初始高度限制为 400px\n  const maxHeight = ref(initHeight + 'px')\n  // 初始宽度限制为 50%\n  const minWidth = ref(initWidth + 'px')\n  const setupDrag = (elDialog: any, el: any) => {\n    // 获取对话框元素\n    // 是否正在调整大小的标志\n    let isResizing = false\n    // 当前调整的方向\n    let currentResizeDirection = ''\n\n    // 鼠标移动时的事件处理器，用于检测鼠标位置并设置相应的光标样式\n    const handleMouseMove = (e: any) => {\n      const rect = elDialog.getBoundingClientRect()\n      // 鼠标相对于对话框左侧的偏移量\n      const offsetX = e.clientX - rect.left\n      // 鼠标相对于对话框顶部的偏移量\n      const offsetY = e.clientY - rect.top\n      const width = elDialog.clientWidth\n      const height = elDialog.clientHeight\n\n      // 获取对话框的内边距\n      const computedStyle = window.getComputedStyle(elDialog)\n      const paddingLeft = parseFloat(computedStyle.paddingLeft)\n      const paddingRight = parseFloat(computedStyle.paddingRight)\n      const paddingBottom = parseFloat(computedStyle.paddingBottom)\n      const paddingTop = parseFloat(computedStyle.paddingTop)\n\n      // 根据鼠标位置设置相应的光标样式和调整方向\n      if (!isResizing) {\n        if (offsetX < paddingLeft && offsetY > paddingTop && offsetY < height - paddingBottom) {\n          elDialog.style.cursor = 'ew-resize' // 左右箭头\n          currentResizeDirection = 'left'\n        } else if (\n          offsetX > width - paddingRight &&\n          offsetY > paddingTop &&\n          offsetY < height - paddingBottom\n        ) {\n          elDialog.style.cursor = 'ew-resize' // 左右箭头\n          currentResizeDirection = 'right'\n        } else if (\n          offsetY < paddingTop &&\n          offsetX > paddingLeft &&\n          offsetX < width - paddingRight\n        ) {\n          elDialog.style.cursor = 'ns-resize' // 上下箭头\n          currentResizeDirection = 'top'\n        } else if (\n          offsetY > height - paddingBottom &&\n          offsetX > paddingLeft &&\n          offsetX < width - paddingRight\n        ) {\n          elDialog.style.cursor = 'ns-resize' // 上下箭头\n          currentResizeDirection = 'bottom'\n        } else if (offsetX < paddingLeft && offsetY < paddingTop) {\n          elDialog.style.cursor = 'nwse-resize' // 左上右下箭头\n          currentResizeDirection = 'top-left'\n        } else if (offsetX > width - paddingRight && offsetY < paddingTop) {\n          elDialog.style.cursor = 'nesw-resize' // 右上左下箭头\n          currentResizeDirection = 'top-right'\n        } else if (offsetX < paddingLeft && offsetY > height - paddingBottom) {\n          elDialog.style.cursor = 'nesw-resize' // 右上左下箭头\n          currentResizeDirection = 'bottom-left'\n        } else if (offsetX > width - paddingRight && offsetY > height - paddingBottom) {\n          elDialog.style.cursor = 'nwse-resize' // 左上右下箭头\n          currentResizeDirection = 'bottom-right'\n        } else {\n          elDialog.style.cursor = 'default'\n          currentResizeDirection = ''\n        }\n      }\n    }\n\n    // 鼠标按下时的事件处理器，开始调整对话框大小\n    const handleMouseDown = (e) => {\n      if (currentResizeDirection) {\n        isResizing = true\n\n        const initialX = e.clientX\n        const initialY = e.clientY\n        const initialWidth = elDialog.clientWidth\n        const initialHeight = el.querySelector('.el-dialog__body').clientHeight\n\n        // 调整大小的事件处理器\n        const handleResizing = (e: any) => {\n          if (!isResizing) return\n\n          let newWidth = initialWidth\n          let newHeight = initialHeight\n\n          // 根据当前调整方向计算新的宽度和高度\n          if (currentResizeDirection.includes('right')) {\n            newWidth = Math.max(minWidthPx, initialWidth + (e.clientX - initialX) * 2)\n            minWidth.value = `${newWidth}px`\n          }\n\n          if (currentResizeDirection.includes('left')) {\n            newWidth = Math.max(minWidthPx, initialWidth - (e.clientX - initialX) * 2)\n            minWidth.value = `${newWidth}px`\n          }\n\n          if (currentResizeDirection.includes('bottom')) {\n            newHeight = Math.max(minHeightPx, initialHeight + (e.clientY - initialY) * 2 - 20)\n            maxHeight.value = `${Math.min(newHeight, window.innerHeight - 165)}px`\n          }\n\n          if (currentResizeDirection.includes('top')) {\n            newHeight = Math.max(minHeightPx, initialHeight - (e.clientY - initialY) * 2 - 20)\n            maxHeight.value = `${Math.min(newHeight, window.innerHeight - 165)}px`\n          }\n\n          if (currentResizeDirection === 'top-left') {\n            newWidth = Math.max(minWidthPx, initialWidth - (e.clientX - initialX) * 2)\n            minWidth.value = `${newWidth}px`\n            newHeight = Math.max(minHeightPx, initialHeight - (e.clientY - initialY) * 2 - 20)\n            maxHeight.value = `${Math.min(newHeight, window.innerHeight - 165)}px`\n          }\n\n          if (currentResizeDirection === 'top-right') {\n            newWidth = Math.max(minWidthPx, initialWidth + (e.clientX - initialX) * 2)\n            minWidth.value = `${newWidth}px`\n            newHeight = Math.max(minHeightPx, initialHeight - (e.clientY - initialY) * 2 - 20)\n            maxHeight.value = `${Math.min(newHeight, window.innerHeight - 165)}px`\n          }\n\n          if (currentResizeDirection === 'bottom-left') {\n            newWidth = Math.max(minWidthPx, initialWidth - (e.clientX - initialX) * 2)\n            minWidth.value = `${newWidth}px`\n            newHeight = Math.max(minHeightPx, initialHeight + (e.clientY - initialY) * 2 - 20)\n            maxHeight.value = `${Math.min(newHeight, window.innerHeight - 165)}px`\n          }\n\n          if (currentResizeDirection === 'bottom-right') {\n            newWidth = Math.max(minWidthPx, initialWidth + (e.clientX - initialX) * 2)\n            minWidth.value = `${newWidth}px`\n            newHeight = Math.max(minHeightPx, initialHeight + (e.clientY - initialY) * 2 - 20)\n            maxHeight.value = `${Math.min(newHeight, window.innerHeight - 165)}px`\n          }\n        }\n        // 停止调整大小的事件处理器\n        const stopResizing = () => {\n          isResizing = false\n          document.removeEventListener('mousemove', handleResizing)\n          document.removeEventListener('mouseup', stopResizing)\n        }\n\n        document.addEventListener('mousemove', handleResizing)\n        document.addEventListener('mouseup', stopResizing)\n      }\n    }\n    elDialog.addEventListener('mousemove', handleMouseMove)\n    elDialog.addEventListener('mousedown', handleMouseDown)\n  }\n\n  return {\n    setupDrag,\n    maxHeight,\n    minWidth\n  }\n}\n","<script lang=\"tsx\" setup>\nimport { propTypes } from '@/utils/propTypes'\nimport { computed, getCurrentInstance, onMounted, unref, useAttrs, useSlots } from 'vue'\nimport Dialog from './Dialog.vue'\nimport { useResize } from '../hooks/useResize'\n\nconst props = defineProps({\n  modelValue: propTypes.bool.def(false),\n  title: propTypes.string.def('Dialog'),\n  fullscreen: propTypes.bool.def(true),\n  initWidth: propTypes.number.def(window.innerWidth / 2),\n  initHeight: propTypes.number.def(200),\n  minResizeWidth: propTypes.number.def(window.innerWidth / 2),\n  minResizeHeight: propTypes.number.def(200)\n})\nconst { maxHeight, minWidth, setupDrag } = useResize({\n  minHeightPx: props.minResizeHeight,\n  minWidthPx: props.minResizeWidth,\n  initHeight: props.initHeight,\n  initWidth: props.initWidth\n})\n\nconst vResize = {\n  mounted(el) {\n    const observer = new MutationObserver(() => {\n      const elDialog = el.querySelector('.el-dialog')\n\n      if (elDialog) {\n        // 在确认 `elDialog` 已渲染后进行处理\n        setupDrag(elDialog, el)\n        // observer.disconnect() // 一旦获取到元素，停止观察\n      }\n    })\n    // 开始观察子节点的变化\n    observer.observe(el, { childList: true, subtree: true })\n  }\n}\n\nconst attrs = useAttrs()\nconst slots = useSlots()\nconst getBindValue = computed(() => {\n  const delArr: string[] = ['maxHeight', 'width']\n  const obj = Object.assign({}, { ...unref(attrs), ...props })\n  for (const key in obj) {\n    if (delArr.indexOf(key) !== -1) {\n      delete obj[key]\n    }\n  }\n  return obj\n})\nconst instance = getCurrentInstance()\nconst initDirective = () => {\n  const directives = instance?.appContext?.app._context?.directives\n\n  // 检查指令是否已经注册\n  if (!directives || !directives['resize']) {\n    instance?.appContext?.app.directive('resize', vResize)\n  }\n}\nonMounted(() => {\n  initDirective()\n})\n</script>\n<template>\n  <div v-resize>\n    <Dialog v-bind=\"getBindValue\" :maxHeight=\"maxHeight\" :width=\"minWidth\">\n      <slot></slot>\n      <template v-if=\"slots.footer\" #footer>\n        <slot name=\"footer\"></slot>\n      </template>\n    </Dialog>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { ContentWrap } from '@/components/ContentWrap'\nimport { Dialog } from '@/components/Dialog'\nimport { useI18n } from '@/hooks/web/useI18n'\nimport { ref, reactive } from 'vue'\nimport { Form, FormSchema } from '@/components/Form'\nimport { useValidator } from '@/hooks/web/useValidator'\nimport { getDictOneApi } from '@/api/common'\nimport { useForm } from '@/hooks/web/useForm'\nimport Echart from './Echart.vue'\nimport ResizeDialog from '@/components/Dialog/src/ResizeDialog.vue'\n\nconst { required } = useValidator()\n\nconst { t } = useI18n()\n\nconst dialogVisible = ref(false)\n\nconst dialogVisible2 = ref(false)\n\nconst dialogVisible3 = ref(false)\n\nconst dialogVisible4 = ref(false)\n\nconst { formRegister, formMethods } = useForm()\nconst { getElFormExpose } = formMethods\n\nconst schema = reactive<FormSchema[]>([\n  {\n    field: 'field1',\n    label: t('formDemo.input'),\n    component: 'Input',\n    formItemProps: {\n      rules: [required()]\n    }\n  },\n  {\n    field: 'field2',\n    label: t('formDemo.select'),\n    component: 'Select',\n    // componentProps: {\n    //   options: []\n    // },\n    optionApi: async () => {\n      const res = await getDictOneApi()\n      return res.data\n    }\n  },\n  {\n    field: 'field3',\n    label: t('formDemo.radio'),\n    component: 'RadioGroup',\n    componentProps: {\n      options: [\n        {\n          label: 'option-1',\n          value: '1'\n        },\n        {\n          label: 'option-2',\n          value: '2'\n        }\n      ]\n    }\n  },\n  {\n    field: 'field4',\n    label: t('formDemo.checkbox'),\n    component: 'CheckboxGroup',\n    value: [],\n    componentProps: {\n      options: [\n        {\n          label: 'option-1',\n          value: '1'\n        },\n        {\n          label: 'option-2',\n          value: '2'\n        }\n      ]\n    }\n  },\n  {\n    field: 'field5',\n    component: 'DatePicker',\n    label: t('formDemo.datePicker'),\n    componentProps: {\n      type: 'date'\n    }\n  },\n  {\n    field: 'field6',\n    component: 'TimeSelect',\n    label: t('formDemo.timeSelect')\n  }\n])\n\nconst formSubmit = async () => {\n  const elFormExpose = await getElFormExpose()\n  elFormExpose?.validate((valid) => {\n    if (valid) {\n      console.log('submit success')\n    } else {\n      console.log('submit fail')\n    }\n  })\n}\n</script>\n\n<template>\n  <ContentWrap :title=\"t('dialogDemo.dialog')\" :message=\"t('dialogDemo.dialogDes')\">\n    <BaseButton type=\"primary\" @click=\"dialogVisible = !dialogVisible\">\n      {{ t('dialogDemo.open') }}\n    </BaseButton>\n\n    <BaseButton type=\"primary\" @click=\"dialogVisible2 = !dialogVisible2\">\n      {{ t('dialogDemo.combineWithForm') }}\n    </BaseButton>\n\n    <Dialog v-model=\"dialogVisible\" :title=\"t('dialogDemo.dialog')\">\n      <Echart />\n      <template #footer>\n        <BaseButton @click=\"dialogVisible = false\">{{ t('dialogDemo.close') }}</BaseButton>\n      </template>\n    </Dialog>\n\n    <Dialog v-model=\"dialogVisible2\" :title=\"t('dialogDemo.dialog')\">\n      <Form :schema=\"schema\" @register=\"formRegister\" />\n      <template #footer>\n        <BaseButton type=\"primary\" @click=\"formSubmit\">{{ t('dialogDemo.submit') }}</BaseButton>\n        <BaseButton @click=\"dialogVisible2 = false\">{{ t('dialogDemo.close') }}</BaseButton>\n      </template>\n    </Dialog>\n  </ContentWrap>\n\n  <ContentWrap\n    class=\"mt-10px\"\n    :title=\"t('dialogDemo.resizeDialog')\"\n    :message=\"t('dialogDemo.dialogDes')\"\n  >\n    <BaseButton type=\"primary\" @click=\"dialogVisible3 = !dialogVisible3\">\n      {{ t('dialogDemo.open') }}\n    </BaseButton>\n\n    <BaseButton type=\"primary\" @click=\"dialogVisible4 = !dialogVisible4\">\n      {{ t('dialogDemo.combineWithForm') }}\n    </BaseButton>\n\n    <ResizeDialog v-model=\"dialogVisible3\" :title=\"t('dialogDemo.dialog')\">\n      <Echart />\n      <template #footer>\n        <BaseButton @click=\"dialogVisible3 = false\">{{ t('dialogDemo.close') }}</BaseButton>\n      </template>\n    </ResizeDialog>\n\n    <ResizeDialog v-model=\"dialogVisible4\" :title=\"t('dialogDemo.dialog')\">\n      <Form :schema=\"schema\" @register=\"formRegister\" />\n      <template #footer>\n        <BaseButton type=\"primary\" @click=\"formSubmit\">{{ t('dialogDemo.submit') }}</BaseButton>\n        <BaseButton @click=\"dialogVisible4 = false\">{{ t('dialogDemo.close') }}</BaseButton>\n      </template>\n    </ResizeDialog>\n  </ContentWrap>\n</template>\n"],"names":["useResize","props","minHeightPx","minWidthPx","initHeight","initWidth","maxHeight","ref","minWidth","elDialog","el","isResizing","currentResizeDirection","handleMouseMove","e","rect","offsetX","offsetY","width","height","computedStyle","paddingLeft","paddingRight","paddingBottom","paddingTop","handleMouseDown","initialX","initialY","initialWidth","initialHeight","handleResizing","newWidth","newHeight","stopResizing","__props","setupDrag","minResizeHeight","minResizeWidth","vResize","mounted","MutationObserver","querySelector","observe","childList","subtree","attrs","useAttrs","slots","useSlots","getBindValue","computed","delArr","obj","Object","assign","__spreadValues","unref","key","indexOf","instance","getCurrentInstance","initDirective","directives","appContext","app","_context","directive","onMounted","required","useValidator","t","useI18n","dialogVisible","dialogVisible2","dialogVisible3","dialogVisible4","formRegister","formMethods","useForm","getElFormExpose","schema","reactive","__async","getDictOneApi","formSubmit","elFormExpose","valid"],"mappings":"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"}